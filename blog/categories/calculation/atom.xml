<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Calculation | JT's Blog]]></title>
  <link href="https://jamestong10.github.io/blog/categories/calculation/atom.xml" rel="self"/>
  <link href="https://jamestong10.github.io/"/>
  <updated>2017-06-15T01:22:13+08:00</updated>
  <id>https://jamestong10.github.io/</id>
  <author>
    <name><![CDATA[James Tong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ActiveRecord Module - Calculations]]></title>
    <link href="https://jamestong10.github.io/blog/2016/08/25/activerecord-module-calculations/"/>
    <updated>2016-08-25T10:44:12+08:00</updated>
    <id>https://jamestong10.github.io/blog/2016/08/25/activerecord-module-calculations</id>
    <content type="html"><![CDATA[<blockquote><p>擷取常用的methods</p></blockquote>

<!-- more -->


<h2>Pluck</h2>

<p>使用<a href="http://apidock.com/rails/ActiveRecord/Calculations/pluck">pluck</a> 查詢想要的欄位資料，值已陣列回傳，值的類別同欄位型別(如果可以)</p>

<p>也可以傳入sql 指令，例如：Distinct</p>

<pre><code>Person.all.map(&amp;:name)

# equal to

Person.pluck(:name)
# SELECT people.name FROM people
# =&gt; ["A", "B", "C"]

Person.pluck(:id, :name)
# SELECT people.id, people.name FROM people
# =&gt; [[1, 'David'], [2, 'Jeremy'], [3, 'Jose']]

Person.pluck('DISTINCT role')
# SELECT DISTINCT role FROM people
# =&gt; ['admin', 'member', 'guest']

Person.where(age: 21).limit(5).pluck(:id)
# SELECT people.id FROM people WHERE people.age = 21 LIMIT 5
# =&gt; [2, 3]

Person.pluck('DATEDIFF(updated_at, created_at)')
# SELECT DATEDIFF(updated_at, created_at) FROM people
# =&gt; ['0', '27761', '173']
</code></pre>

<blockquote><p>與select 的差別在於，select 會取出model object，而pluck 只取出module value</p></blockquote>

<p>使用Benchmark 測試一下兩者的執行時間</p>

<pre><code>puts Benchmark.measure { User.select(:id).to_a }
# User Load (0.6ms)  SELECT "users"."id" FROM "users"
# 0.010000   0.000000   0.010000 (  0.014949)

puts Benchmark.measure { User.pluck(:id) }
# (0.8ms)  SELECT "users"."id" FROM "users"
# 0.000000   0.000000   0.000000 (  0.004965)
</code></pre>

<p>相較之下，pluck 的執行速度會比select 快</p>

<p>是因為select 還要把結果轉model object，但是pluck 單純把結果轉array</p>

<p>結論：如果只要單純取欄位的資料，請選擇<code>pluck</code></p>

<h2>Count</h2>

<p><a href="http://apidock.com/rails/v4.2.1/ActiveRecord/Calculations/count">Count</a> the records</p>

<pre><code>Person.count
# =&gt; the total count of all people

Person.count(:age)
# =&gt; returns the total count of all people whose age is present in database

Person.count(:all)
# =&gt; performs a COUNT(*) (:all is an alias for '*')

Person.distinct.count(:age)
# =&gt; counts the number of different age values
</code></pre>

<p>使用group 會回傳Hash 值，並以key = column value, value = count amount 的方式表示</p>

<pre><code>Person.group(:city).count
# =&gt; { 'Rome' =&gt; 5, 'Paris' =&gt; 3 }
</code></pre>

<p>如果group 多個欄位，那key 就是欄位的組合</p>

<pre><code>Article.group(:status, :category).count
# =&gt;  {["draft", "business"]=&gt;10, ["draft", "technology"]=&gt;4,
       ["published", "business"]=&gt;0, ["published", "technology"]=&gt;2}
</code></pre>

<p>使用select 則是回傳select 後的筆數</p>

<blockquote><p>並非所有正確的select 都會產生正確的count。會根據database 而有所不同。</p></blockquote>

<pre><code>Person.select(:age).count
# =&gt; counts the number of different age values
</code></pre>

<h2>Maximum/Minimum</h2>

<p><a href="http://apidock.com/rails/v4.2.1/ActiveRecord/Calculations/maximum">Maximum</a> 找出查詢欄位的最大值，查詢結果會根據欄位型別產生對應的物件類別，無資料則回傳<code>nil</code></p>

<pre><code>Person.maximum(:age) # =&gt; 93
</code></pre>

<p>同上，但是<a href="http://apidock.com/rails/v4.2.1/ActiveRecord/Calculations/minimum">Minimum</a>查詢最小值</p>

<pre><code>Person.minimum(:age) # =&gt; 7
</code></pre>

<h2>Sum/Average</h2>

<p><a href="http://apidock.com/rails/ActiveRecord/Calculations/sum">Sum</a> 計算查詢欄位的總和，無資料則回傳0</p>

<pre><code>Person.sum(:age) # =&gt; 4562
</code></pre>

<p><a href="http://apidock.com/rails/ActiveRecord/Calculations/average">Average</a> 計算欄位的平均值，無資料則回傳<code>nil</code></p>

<pre><code>Person.average(:age) # =&gt; 35.8
</code></pre>

<h2>References</h2>

<ul>
<li><a href="http://apidock.com/rails/ActiveRecord/Calculations/">ActiveRecord-Calculations</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
