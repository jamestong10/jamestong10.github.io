<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[JT's Blog]]></title>
  <link href="https://jamestong10.github.io/atom.xml" rel="self"/>
  <link href="https://jamestong10.github.io/"/>
  <updated>2017-06-09T22:13:20+08:00</updated>
  <id>https://jamestong10.github.io/</id>
  <author>
    <name><![CDATA[James Tong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails Partials]]></title>
    <link href="https://jamestong10.github.io/blog/2017/06/05/rails-partial/"/>
    <updated>2017-06-05T16:41:07+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/06/05/rails-partial</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>用來簡化 View 複雜的程式邏輯</p>

<p>把細節的部份拆出去，更容易理解 View 的全局</p>

<p>檔名需要<strong>以底線開頭</strong>，但呼叫時不需加上底線</p></blockquote>

<p>Action View Partials 用來 render sub templates</p>

<h2>Syntax</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">render</span> <span class="ss">partial</span><span class="p">:</span> <span class="n">sub_template_name</span><span class="p">,</span> <span class="o">*</span><span class="n">options</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>render</code> is a shorthand for <code>render partial:</code></li>
<li>單使用 <code>render</code>, Rails 就不會處理後續的 options</li>
<li>如果要使用 options 就要改成 <code>render partial:</code></li>
</ul>


<h2>Default Case</h2>

<p>使用 <code>render</code> 產生 partial</p>

<p>雖然有規定 <code>render</code> 不會處理 options，但還有一些特殊案例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= render partial: &quot;account&quot; %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx"># equivalent to</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">render</span> <span class="s2">&quot;account&quot;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>sub template name equivalent to variable name</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= render partial: &quot;accounts/account&quot;, locals: { account: @account} %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx"># equivalent to</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">render</span> <span class="vi">@account</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>只有單一個 locals</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= render partial: &quot;account&quot;, locals: { account: @buyer } %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx"># equivalent to</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">render</span> <span class="s2">&quot;account&quot;</span><span class="p">,</span> <span class="ss">account</span><span class="p">:</span> <span class="vi">@buyer</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>都同名可簡化 collection</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= render partial: &quot;posts/post&quot;, collection: @posts %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx"># equivalent to</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">render</span> <span class="vi">@posts</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Options</h2>

<h3>locals</h3>

<p>傳遞資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">render</span> <span class="ss">partial</span><span class="p">:</span> <span class="s2">&quot;user&quot;</span><span class="p">,</span> <span class="ss">locals</span><span class="p">:</span> <span class="p">{</span> <span class="ss">user</span><span class="p">:</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">order</span><span class="p">:</span> <span class="vi">@order</span> <span class="p">}</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>collection</h3>

<p>使用 for-each render 逐一產生 partial</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># index.html.erb</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= render partial: &quot;product&quot;, collection: @products %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx"># _product.html.erb</span>
</span><span class='line'><span class="sx">Product Name: &lt;%=</span> <span class="n">product</span><span class="o">.</span><span class="n">name</span> <span class="sx">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx"># short-hand</span>
</span><span class='line'><span class="sx">&lt;%= @products %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># if collection is empty, render will return nil,</span>
</span><span class='line'><span class="c1"># should simple to provide alternative message.</span>
</span><span class='line'><span class="o">&lt;%=</span> <span class="n">render</span><span class="p">(</span><span class="vi">@products</span><span class="p">)</span> <span class="o">||</span> <span class="s2">&quot;Empty Products&quot;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>layout</h3>

<p>指定 render layout</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">render</span> <span class="ss">partial</span><span class="p">:</span> <span class="s2">&quot;user&quot;</span><span class="p">,</span> <span class="ss">locals</span><span class="p">:</span> <span class="p">{</span> <span class="ss">user</span><span class="p">:</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">order</span><span class="p">:</span> <span class="vi">@order</span> <span class="p">},</span> <span class="ss">layout</span><span class="p">:</span> <span class="s1">&#39;editor&#39;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>進階 Layout - layout + yield</h2>

<h3>動機</h3>

<p>把共用的 view 寫在 layout ，然後客製（變動）的內容寫在partial</p>

<h3>開發</h3>

<p>1.寫一個 layout 專用的 partial view，並把需要客製的部份加上 <code>yield</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%# app/views/users/_editor.html.haml %&gt;</span>
</span><span class='line'><span class="sx">#</span><span class="n">editor</span>
</span><span class='line'>  <span class="o">%</span><span class="n">h1</span> <span class="n">always</span> <span class="n">the</span> <span class="n">same</span> <span class="n">headline</span>
</span><span class='line'>  <span class="o">%</span><span class="n">h3</span> <span class="n">always</span> <span class="n">the</span> <span class="n">same</span> <span class="n">description</span>
</span><span class='line'>  <span class="o">=</span> <span class="k">yield</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.寫客製的 partial view</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%# app/views/users/_user.html.haml %&gt;</span>
</span><span class='line'><span class="sx">= &quot;Deadline: #</span><span class="p">{</span><span class="n">user</span><span class="o">.</span><span class="n">deadline</span><span class="p">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">= &quot;</span><span class="ss">Name</span><span class="p">:</span> <span class="c1">#{user.name}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.render 設定 partial and layout，就可以把 partial 的內容套在 layout 的 yield 區塊內</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%</span><span class="c1"># app/views/users/index.html.haml %&gt;</span>
</span><span class='line'><span class="o">&lt;%=</span> <span class="n">render</span> <span class="ss">partial</span><span class="p">:</span> <span class="s2">&quot;user&quot;</span><span class="p">,</span> <span class="ss">layout</span><span class="p">:</span> <span class="s2">&quot;editor&quot;</span><span class="p">,</span> <span class="ss">locals</span><span class="p">:</span> <span class="p">{</span> <span class="ss">user</span><span class="p">:</span> <span class="vi">@user</span> <span class="p">}</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果不用 <code>yield</code>，可以使用 block 表現</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= render layout: &quot;editor&quot;, locals: { user: @user } do %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">do_something</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>實際應用：把預覽圖片跟上傳圖片的功能提取出來，並且可個別設定內部要呈現的內容，例如：產品說明、大頭照說明等</p>

<h2>Helper + Partial</h2>

<p>這次要把partial 放進 helper 內</p>

<p>1.一樣建立 partial，把要執行客製的部分使用 <code>capture(&amp;block)</code> 表示</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%# app/views/users/_editor.html.haml %&gt;</span>
</span><span class='line'><span class="sx">#</span><span class="n">editor</span>
</span><span class='line'>  <span class="o">%</span><span class="n">h1</span> <span class="n">always</span> <span class="n">the</span> <span class="n">same</span> <span class="n">headline</span>
</span><span class='line'>  <span class="o">%</span><span class="n">h3</span> <span class="n">always</span> <span class="n">the</span> <span class="n">same</span> <span class="n">description</span>
</span><span class='line'>  <span class="o">=</span> <span class="n">capture</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.在helper 寫method 呼叫 <code>render partial:</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># application_helper.rb</span>
</span><span class='line'><span class="k">def</span> <span class="nf">modal_for</span><span class="p">(</span><span class="n">heading</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">render</span><span class="p">(</span>
</span><span class='line'>    <span class="ss">partial</span><span class="p">:</span> <span class="s1">&#39;shared/modal&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">locals</span><span class="p">:</span> <span class="p">{</span> <span class="ss">heading</span><span class="p">:</span> <span class="n">heading</span><span class="p">,</span> <span class="ss">block</span><span class="p">:</span> <span class="n">block</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.在view 使用helper</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">modal_for</span><span class="p">(</span><span class="s1">&#39;My Title&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  # print dynamic things here</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>實際應用：把預覽圖片跟上傳圖片的功能提取出來，並且可個別設定內部要呈現的內容，例如：產品說明、大頭照說明等</p>

<h2>References</h2>

<ul>
<li><a href="http://guides.rubyonrails.org/layouts_and_rendering.html#using-partials">Rails Guide - using partials</a></li>
<li><a href="http://api.rubyonrails.org/classes/ActionView/PartialRenderer.html">Rails Classes - Action View Partials</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Delegate]]></title>
    <link href="https://jamestong10.github.io/blog/2017/06/05/rails-delegate/"/>
    <updated>2017-06-05T15:34:16+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/06/05/rails-delegate</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>屬於 ActiveSupport Delegate method</p>

<p>主要運用在 activerecord associations</p></blockquote>

<h2>Spec</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">delegate</span><span class="p">(</span><span class="o">*</span><span class="nb">methods</span><span class="p">)</span> <span class="kp">public</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Options</h3>

<ul>
<li><code>:to</code> 指定目標物件</li>
<li><code>:prefix</code> 設為true 就是以 :to 的物件名稱當作前綴字，或是自行設定前綴字</li>
<li><code>:allow_nil</code> 設為 true 不會產生 NoMethodError Exception，預設為 false</li>
</ul>


<h2>Description</h2>

<p>Provides a <a href="https://apidock.com/rails/Module/delegate">delegate</a> class method to easily expose contained objects’ public methods as your own.</p>

<p>The target method must be public, otherwise it will raise NoMethodError.</p>

<h2>Delegation Design Pattern</h2>

<p>Delegation 設計模式是讓物件曝露一些性質，但這些性質其實是取用與當前實例相關連的其它實例的性質而來的</p>

<h2>Explanation of Rails Delegate</h2>

<p>根據以下範例瞭解 Rails Delegate 運作方式。建議可以查看 <a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/module/delegation.rb">delegation.rb</a> 瞭解實作方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:posts</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>根據以上的關聯，要如何設計呼叫 <code>@post.name</code> 可直接取得 <code>@post.user.name</code> 又不會出現 NoMethodError 呢？</p>

<p>1.自行寫 <code>#name</code> 裡面在使用 <code>#try</code> 取 user.name</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span>
</span><span class='line'>    <span class="n">user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.以 <code>#delegate</code> 表示</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">allow_nil</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Practice</h2>

<p>一般在寫 Rails 會直覺使用 associations 取得資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># models</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Invoice</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'> <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># views</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= @invoice.user.name %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="vi">@invoice</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">address</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= @invoice.user.cellphone %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>若比較嚴謹來看，這樣是違反 <a href="https://jamestong10.github.io/blog/2017/05/15/object-orientend-design-priciples/">Lask Knowledge Priciple</a></p>

<p>而且 Views 看起來也不漂亮</p>

<p>這時可透過 Rails Delegate 優化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># models</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Invoice</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'> <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'> <span class="n">delegate</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:address</span><span class="p">,</span> <span class="ss">:cellphone</span><span class="p">,</span>
</span><span class='line'> <span class="ss">to</span><span class="p">:</span> <span class="ss">:user</span><span class="p">,</span>
</span><span class='line'> <span class="ss">prefix</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'> <span class="ss">allow_nil</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># views</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= @invoice.user_name %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="vi">@invoice</span><span class="o">.</span><span class="n">user_address</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= @invoice.user_cellphone %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>這樣看起來是不是清爽多了~</p>

<h2>Others</h2>

<p>參考 <a href="https://jamestong10.github.io/blog/2017/05/10/ruby-forwardable/">Ruby Forwardable</a></p>

<h2>References</h2>

<ul>
<li><a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/module/delegation.rb">delegation.rb</a></li>
<li><a href="https://apidock.com/rails/Module/delegate">Rails doc#delegate</a></li>
<li><a href="https://simonecarletti.com/blog/2009/12/inside-ruby-on-rails-delegate/">Understanding Ruby and Rails: Delegate</a></li>
<li><a href="http://sharefun.logdown.com/posts/737036-understanding-rails-delegate">理解Rails delegate</a></li>
<li><a href="http://waynechu.logdown.com/posts/206252-rails-delegate">Rails Delegate</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Tap / Fetch / Dig / Try]]></title>
    <link href="https://jamestong10.github.io/blog/2017/06/01/ruby-tap-fetch-dig-try/"/>
    <updated>2017-06-01T14:44:42+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/06/01/ruby-tap-fetch-dig-try</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Tap</h2>

<p>從 <a href="https://ruby-doc.org/core-2.4.1/Object.html#method-i-tap">source code</a> 可以看出最後會傳回 self</p>

<p>以下分成兩個用途，分別介紹如何運用此特性</p>

<h3>用途一：調測</h3>

<p>在使用 chain 時，要查看某個過程的內容，可以使用 <code>#tap</code> 印出內容，卻又不會影響執行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span>                <span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;original: </span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="o">.</span><span class="n">to_a</span>                <span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;array: </span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="o">.</span><span class="n">select</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">}</span> <span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;evens: </span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">*</span><span class="n">x</span> <span class="p">}</span>     <span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;squares: </span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>用途二：簡化代碼</h3>

<p>可用在建立一個方法，要傳回一個 String/Array/Hash 的結果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[].</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;abc&quot;</span><span class="p">}</span>
</span><span class='line'><span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="n">do_some_thing</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><a href="https://ruby-doc.org/core-2.4.1/Object.html#method-i-tap">ruby doc - tap</a></li>
<li><a href="https://ruby-china.org/topics/5348">Rails 技巧之 tap &amp; try</a></li>
</ul>


<h2>Fetch</h2>

<blockquote><p>取不到值時，會以預設值取代，但沒設定預設值會出現 Error</p></blockquote>

<p>Hash / Array 皆有實作 <code>#fetch</code></p>

<h3>Array#fetch</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">44</span> <span class="o">]</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>               <span class="c1">#=&gt; 22</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>              <span class="c1">#=&gt; 44</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s1">&#39;cat&#39;</span><span class="p">)</span>        <span class="c1">#=&gt; &quot;cat&quot;</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">*</span><span class="n">i</span> <span class="p">}</span>   <span class="c1">#=&gt; 16</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>               <span class="c1">#=&gt; IndexError</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Hash#fetch</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&quot;a&quot;</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span> <span class="o">=&gt;</span> <span class="mi">200</span> <span class="p">}</span>
</span><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)</span>                            <span class="c1">#=&gt; 100</span>
</span><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;z&quot;</span><span class="p">,</span> <span class="s2">&quot;go fish&quot;</span><span class="p">)</span>                 <span class="c1">#=&gt; &quot;go fish&quot;</span>
</span><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;z&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">el</span><span class="o">|</span> <span class="s2">&quot;go fish, </span><span class="si">#{</span><span class="n">el</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>   <span class="c1">#=&gt; &quot;go fish, z&quot;</span>
</span><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s2">&quot;z&quot;</span><span class="p">)</span>                            <span class="c1">#=&gt; KeyError</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><a href="https://ruby-doc.org/core-1.9.3/Array.html#method-i-fetch">ruby doc - array#fetch</a></li>
<li><a href="https://ruby-doc.org/core-2.2.0/Hash.html#method-i-fetch">ruby doc - hash#fetch</a></li>
</ul>


<h2>Dig</h2>

<blockquote><p>適用在多層</p>

<p>跟 #try 一樣，如果其中一層為 nil，會回傳 nil 而不會出現 Error</p></blockquote>

<p>Ruby 2.3.0</p>

<p>Hash / Array 皆有實作 <code>#dig</code></p>

<h3>Array#dig</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[[</span><span class="mi">1</span><span class="p">,</span> <span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]]]</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">dig</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>                    <span class="c1">#=&gt; 3</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">dig</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>                    <span class="c1">#=&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Hash#dig</h3>

<p>在 rails 取 params 時，會使用以下方式取值</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:company</span><span class="o">][</span><span class="ss">:owner</span><span class="o">][</span><span class="ss">:name</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>要避免遇到 nil，可改寫成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:company</span><span class="o">][</span><span class="ss">:owner</span><span class="o">][</span><span class="ss">:name</span><span class="o">]</span> <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:company</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:company</span><span class="o">][</span><span class="ss">:owner</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:company</span><span class="o">][</span><span class="ss">:owner</span><span class="o">][</span><span class="ss">:name</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用 #dig 處理</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span> <span class="o">=</span> <span class="n">params</span><span class="o">.</span><span class="n">dig</span><span class="p">(</span><span class="ss">:company</span><span class="p">,</span> <span class="ss">:owner</span><span class="p">,</span> <span class="ss">:name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>同樣 case 用 <code>#try</code> 的 chain，看來使用 <code>#dig</code> 比較適合</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">params</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:[]</span><span class="p">,</span> <span class="ss">:company</span><span class="p">)</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:[]</span><span class="p">,</span> <span class="ss">:owner</span><span class="p">)</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:[]</span><span class="p">,</span> <span class="ss">:name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><a href="http://ruby-doc.org/core-2.3.0_preview1/Array.html#method-i-dig">ruby doc - array#dig</a></li>
<li><a href="http://ruby-doc.org/core-2.3.0_preview1/Hash.html#method-i-dig">ruby doc - hash#dig</a></li>
</ul>


<h2>try</h2>

<p>同場加映，<code>#try</code> 是屬於 Rails Object method</p>

<p>等同 <code>Object#send</code>，但 object 為 nil 時，呼叫 method <strong>會出現</strong> NoMethodError exception</p>

<p>但使用 <code>#try</code>，object 為 nil 時，會回傳 nil ，而<strong>不會出現</strong> NoMethodError exception</p>

<p>因此是一個相當實用的功能</p>

<p>最常見的例子像是我們想判斷某些動作只有管理員可以進行操作，因此我們通常會這樣寫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">is_admin?</span>
</span><span class='line'>    <span class="c1"># do something</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但總會遇到 current_user 有 nil 的時候，這時就適合用 <code>#try</code> 確認 current_user 是否為 nil，再去呼叫 <code>#is_admin?</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:is_admin?</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># do something</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>#try</code> 也可以實現 block，如果 instance object 不為 nil</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">try</span> <span class="p">{</span> <span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">p</span><span class="o">.</span><span class="n">first_name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">p</span><span class="o">.</span><span class="n">last_name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><a href="https://apidock.com/rails/v4.2.7/Object/try">apidock - try</a></li>
<li><a href="https://ruby-china.org/topics/5348">Rails 技巧之 tap &amp; try</a></li>
<li><a href="https://ihower.tw/rails/activesupport.html#try">ihower active support - try</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scss and Sass]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/29/scss-and-sass/"/>
    <updated>2017-05-29T15:56:26+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/29/scss-and-sass</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>學會 scss / sass 可以加速寫 css</p>

<p>sass 跟 scss 的差別，不需要寫大括號和分號和mixins 的用法</p></blockquote>

<h2>SCSS</h2>

<p>檔名存成 .scss</p>

<h3>常用功能</h3>

<ol>
<li>使用@import</li>
<li>算數</li>
<li>顏色</li>
</ol>


<h3>變數命名</h3>

<p>已 $ 開頭命名</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$base_font_size: 10px;
</span><span class='line'>$base_color: #666;</span></code></pre></td></tr></table></div></figure>


<h3>Nesting（＆可省略, 注意「空格」）</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.main {
</span><span class='line'>  &.sec {
</span><span class='line'>    # .main.sec
</span><span class='line'>  }
</span><span class='line'>  & .third {
</span><span class='line'>    # .main .third
</span><span class='line'>  }
</span><span class='line'>  .fourth {}
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Mixins</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@mixin roundedBox {
</span><span class='line'>  $radius: 10px;
</span><span class='line'>  border-radius: $radius;
</span><span class='line'>}
</span><span class='line'>.main {
</span><span class='line'>  @include roundedBox;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Mixins(預設參數）</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@mixin roundedBox($radius: 5px) {
</span><span class='line'>  border-radius: $radius;
</span><span class='line'>}
</span><span class='line'>.main {
</span><span class='line'>  @include roundedBox(10px);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Inheritance</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.red-color {
</span><span class='line'>  color: red;
</span><span class='line'>}
</span><span class='line'>.error {
</span><span class='line'>  font-size: $base_font_size * 1.4;
</span><span class='line'>  @extend .red-color;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Operators</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$margin : 16px;
</span><span class='line'>
</span><span class='line'>.island {
</span><span class='line'>    background: #cc0000;
</span><span class='line'>    width: $column * 4;
</span><span class='line'>    margin: $margin * 2 $margin / 2 $margin + 20 $margin;
</span><span class='line'>    padding: $margin * 0.25;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>SASS</h2>

<p>檔名存成 .sass</p>

<h3>變數命名</h3>

<p>已 $ 開頭命名</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$base_font_size: 10px
</span><span class='line'>$base_color: #666</span></code></pre></td></tr></table></div></figure>


<h3>Nesting（＆可省略, 注意「空格」）</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.main
</span><span class='line'>  &.sec
</span><span class='line'>    # .main.sec
</span><span class='line'>  & .third
</span><span class='line'>    # .main .third
</span><span class='line'>  .fourth
</span><span class='line'>    # .main.fourth
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Mixins</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>=roundedBox {
</span><span class='line'>  $radius: 10px;
</span><span class='line'>  border-radius: 5px;
</span><span class='line'>}
</span><span class='line'>.main {
</span><span class='line'>  +roundedBox;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Mixins(預設參數）</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>=roundedBox($radius: 5px) {
</span><span class='line'>  border-radius: $radius;
</span><span class='line'>}
</span><span class='line'>.main {
</span><span class='line'>  +roundedBox(10px);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Inheritance</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.red-color
</span><span class='line'>  color: red
</span><span class='line'>
</span><span class='line'>.error
</span><span class='line'>  font-size: $base_font_size * 1.4
</span><span class='line'>  @extend .red-color</span></code></pre></td></tr></table></div></figure>


<h3>Operators</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>article[role="main"]
</span><span class='line'>  float: left
</span><span class='line'>  width: 600px / 960px * 100%</span></code></pre></td></tr></table></div></figure>


<h3>Mixin + media screen</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$base_font_size: 10px
</span><span class='line'>$phone: "(max-width: 540px)"
</span><span class='line'>
</span><span class='line'>=font-size($large: $base_font_size*3, $small: $base_font_size*2)
</span><span class='line'>  font-size: $large
</span><span class='line'>  @media screen and #{phone}
</span><span class='line'>    font-size: $small</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="http://augus-blog.logdown.com/posts/143401-scss-tutorial">scss tutorial</a></li>
<li><a href="http://sass-lang.com/documentation/Sass/Script/Functions.html">scss documentation</a></li>
<li><a href="http://blog.visioncan.com/2011/sass-scss-your-css/">使用scss來加速寫css吧</a></li>
<li><a href="http://sass-lang.com/documentation/file.SASS_REFERENCE.html">sass documentation</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Map / Collect / Each]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/26/ruby-block-map-collect/"/>
    <updated>2017-05-26T13:51:46+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/26/ruby-block-map-collect</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Map / Collect</h2>

<p>一般來說，會把這兩個視為同一種功能，也有說法是map 是collect 的別名</p>

<p>stackoverflow 有針對 map 和 collect 做 benchmark，<strong>使用 map 效能會比較好</strong></p>

<p>map 和 collect 是屬於 Enumerable Module 的 methods</p>

<p>map 和 collect 會回傳新的 array，而 array 內的值是 block 執行的結果</p>

<p>Array、Hash 都有include enumerable module，就可以使用map 和 collect</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Array</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">].</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; [2, 3, 4]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Hash</span>
</span><span class='line'><span class="nb">hash</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s2">&quot;John&quot;</span><span class="p">,</span> <span class="ss">:age</span> <span class="o">=&gt;</span> <span class="mi">30</span><span class="p">,</span> <span class="ss">:phone</span> <span class="o">=&gt;</span> <span class="s2">&quot;0910111000&quot;</span><span class="p">}</span>
</span><span class='line'><span class="nb">hash</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span> <span class="n">value</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># =&gt; [&quot;John&quot;, 30, &quot;0910111000&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>&amp; 是 <a href="https://jamestong10.github.io/blog/2016/08/10/ruby-proc-lamdba-yield/">#to_proc</a> 簡化的符號</h2>

<p>在Rails 中，假設要取得所有User 的姓名，使用 map 的寫法如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">names</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span> <span class="n">user</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span> <span class="p">}</span><span class="o">.</span><span class="n">compact</span>
</span><span class='line'><span class="c1"># compact: Returns a copy of self with all nil elements removed.</span>
</span></code></pre></td></tr></table></div></figure>


<p>承上，簡化 <code>user[:name]</code>，可以使用<code>&amp;</code> 執行 <code>#to_proc</code>，就變成<code>&amp;:name</code></p>

<p>stackoverflow 有更詳細的<a href="https://stackoverflow.com/a/1217114">說明</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 取值</span>
</span><span class='line'><span class="n">names</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用 String#upcase</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 轉大寫</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;vanessa&quot;</span><span class="p">,</span> <span class="s2">&quot;david&quot;</span><span class="p">,</span> <span class="s2">&quot;thomas&quot;</span><span class="o">].</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:upcase</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt; [&quot;VANESSA&quot;, &quot;DAVID&quot;, &quot;THOMAS&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># equivalent to</span>
</span><span class='line'><span class="sx">%w(vanessa david thomas)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span> <span class="n">s</span><span class="o">.</span><span class="n">upcase</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>跟 each 差別在哪呢？</h2>

<p>看完 map, collect 感覺跟一般常用的 each 很像，那他們的差別在哪邊呢？</p>

<p>首先 Array、Hash 都有各自實作 <code>#each</code></p>

<p>執行的方式，跟執行 block 的動作是一樣的</p>

<p><strong>主要差別在 each 是回傳self (Array、Hash)，而map 和 collect 回傳 new array</strong></p>

<h2>References</h2>

<ul>
<li><a href="http://motion-express.com/blog/20141010-ruby-block-map-collect">常見 block 說明和應用：do, map, collect</a></li>
<li><a href="http://stackoverflow.com/questions/1217088/what-does-mapname-mean-in-ruby">what-does-mapname-mean-in-ruby</a></li>
<li><a href="http://stackoverflow.com/questions/5254732/difference-between-map-and-collect-in-ruby">difference-between-map-and-collect-in-ruby</a></li>
<li><a href="https://stackoverflow.com/questions/12084507/what-does-the-map-method-do-in-ruby">what-does-the-map-method-do-in-ruby</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make a+ HTTPS Web Server]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/23/make-a-plus-https-web-server/"/>
    <updated>2017-05-23T15:16:20+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/23/make-a-plus-https-web-server</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>購買憑證 / 續購憑證</h2>

<p>憑證是從 <a href="https://www.namecheap.com/">namecheap</a> 購買</p>

<p>在購買之前可以先了解 level of validation: DV, OV, EV</p>

<p><img src="https://jamestong10.github.io/images/posts/2017052301.jpg" alt="dv/ov/ev" /></p>

<p>網頁也有詳細說明</p>

<p><img src="https://jamestong10.github.io/images/posts/2017052302.jpg" alt="instructions" /></p>

<p>購買的部分，因為太簡單了，就不再贅述</p>

<h2>設定憑證</h2>

<p>分成四個步驟 CSR -> Validation -> Contacts -> Confirm</p>

<p>四個步驟中，就 CSR 比較複雜，其餘看說明就可以囉!</p>

<h3>CSR - Certificate Signing Request</h3>

<p>如果是新的網站，就要自己建立一組 private key</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ openssl req -new -newkey rsa:2048 -sha256 -nodes -keyout server.key -out server.csr
</span><span class='line'>
</span><span class='line'># 填寫憑證資訊
</span><span class='line'>Country Name (2 letter code) [AU]:TW
</span><span class='line'>State or Province Name (full name) [Some-State]:TAIWAN
</span><span class='line'>Locality Name (eg, city) []:NEW TAIPEI CITY
</span><span class='line'>Organization Name (eg, company) [Internet Widgits Pty Ltd]:DOMAIN LTD
</span><span class='line'>Organizational Unit Name (eg, section) []:
</span><span class='line'>
</span><span class='line'># 網址
</span><span class='line'># 根據購買certificate 的種類有關
</span><span class='line'># PremiumSSL Wildcard 多個網址：*.domain.com
</span><span class='line'>Common Name (e.g. server FQDN or YOUR name) []:*.domain.com
</span><span class='line'># PositiveSSL 單一網址：www.domain.com
</span><span class='line'>Common Name (e.g. server FQDN or YOUR name) []:www.domain.com
</span><span class='line'>
</span><span class='line'>Email Address []:service@domain.com
</span><span class='line'>
</span><span class='line'>Please enter the following 'extra' attributes
</span><span class='line'>to be sent with your certificate request
</span><span class='line'>A challenge password []:
</span><span class='line'>An optional company name []:</span></code></pre></td></tr></table></div></figure>


<p>複製 CSR 資訊，貼到 CSR 區塊</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat server.csr
</span><span class='line'># -----BEGIN CERTIFICATE REQUEST-----
</span><span class='line'># ...
</span><span class='line'># -----END CERTIFICATE REQUEST-----</span></code></pre></td></tr></table></div></figure>


<h2>HTTPS Setting</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /etc/nginx/sites-enabled/domain.conf
</span><span class='line'>server {
</span><span class='line'>    listen 80;
</span><span class='line'>    listen 443 ssl spdy default_server;
</span><span class='line'>    server_name domain.com;
</span><span class='line'>
</span><span class='line'>    # Tell Nginx and Passenger where your app's 'public' directory is
</span><span class='line'>    root /home/apps/myguide/current/public;
</span><span class='line'>
</span><span class='line'>    # SSL configuration
</span><span class='line'>    # 根據之前購買的憑證，會寄送domain.crt 檔案到信箱
</span><span class='line'>    # 然後把步驟一的 server.key 和 domain.crt 上傳到server /etc/ssl/
</span><span class='line'>    ssl on;
</span><span class='line'>    ssl_certificate      /etc/ssl/domain.crt;
</span><span class='line'>    ssl_certificate_key  /etc/ssl/domain.key;
</span><span class='line'>    # spdy_headers_comp 0;
</span><span class='line'>    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
</span><span class='line'>    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
</span><span class='line'>    ssl_prefer_server_ciphers on;
</span><span class='line'>
</span><span class='line'>    # Turn on Passenger
</span><span class='line'>    passenger_enabled on;
</span><span class='line'>    passenger_ruby /home/apps/.rvm/gems/ruby-2.2.5/wrappers/ruby;
</span><span class='line'>
</span><span class='line'>    rails_env "production";
</span><span class='line'>
</span><span class='line'>    location ~* ^/(assets|images)/ {
</span><span class='line'>      expires 1y;
</span><span class='line'>      add_header Cache-Control "public";
</span><span class='line'>
</span><span class='line'>      if ($request_filename ~* ^.*?\.(eot|ttf|woff|svg|otf|woff2)$) {
</span><span class='line'>        add_header Access-Control-Allow-Origin *;
</span><span class='line'>      }
</span><span class='line'>      break;
</span><span class='line'>    }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<h2>加強安全性</h2>

<p>如果到這一步，表示你之前都已經完成了!(當然..)</p>

<p>請到 <a href="https://www.ssllabs.com/ssltest/index.html">ssl labs</a>  測試網站安全性</p>

<p>沒看錯得到了分數 B !!</p>

<p><img src="https://jamestong10.github.io/images/posts/2017052303.jpg" alt="level B" /></p>

<p>感謝網路大神分享文章 <a href="https://www.peterdavehello.org/2015/10/build-an-a-plus-best-practice-https-web-server-via-nginx-chinese-version/">用 nginx 建置一個 A+ 等級的 https 網頁伺服器</a> 解決labs 指出需改善的問題</p>

<p><strong>1.This server supports weak Diffie-Hellman (DH) key exchange parameters. Grade capped to B.</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 使用 openssl 命令產升 4096-bit “Strong” Diffie Hellman Group
</span><span class='line'>$ openssl dhparam -out dhparams.pem 4096
</span><span class='line'>
</span><span class='line'># 產生出來的 dhparams.pem 請把它當作你其他的 private key 一樣好好保管
</span><span class='line'># 安全起見請調整檔案的owner, group以及權限
</span><span class='line'>$ sudo chown www-data:www-data dhparams.pem
</span><span class='line'>$ sudo chmod 400 dhparams.pem
</span><span class='line'>
</span><span class='line'># /etc/nginx/sites-enabled/myguide.conf
</span><span class='line'>server {
</span><span class='line'> # ...
</span><span class='line'> ssl_certificate      /etc/ssl/domain.crt;
</span><span class='line'> ssl_certificate_key  /etc/ssl/domain.key;
</span><span class='line'>+ ssl_dhparam /etc/ssl/dhparams.pem;
</span><span class='line'> # ...
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># reload config
</span><span class='line'>$ sudo service nginx reload
</span><span class='line'>
</span><span class='line'># 測試成功！！但還是拿到Rank B</span></code></pre></td></tr></table></div></figure>


<p><strong>2.This server&rsquo;s certificate chain is incomplete</strong></p>

<p>這是因為憑證只有最後簽發的，並未包含中間簽核單位的資訊，導致此問題出現</p>

<p>憑證是跟 Comodo 購買的所以網站上可找到中間簽核單位的憑證</p>

<ul>
<li>Intermediate #3 申請的憑證 www_domain_com.crt</li>
<li>[Intermediate #2 (SHA-2)] Comodo RSA Domain Validation Secure Server CA (<a href="https://goo.gl/pNFYR8">https://goo.gl/pNFYR8</a>)</li>
<li>[Intermediate #1 (SHA-2)] COMODO RSA Certification Authority (<a href="https://goo.gl/b32Q0T">https://goo.gl/b32Q0T</a>)</li>
</ul>


<p>接著把 #3, #2, #1 照順序組合在一起變成一個檔案</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /etc/nginx/sites-enabled/domain.conf
</span><span class='line'>
</span><span class='line'>server {
</span><span class='line'> # ...
</span><span class='line'> - ssl_certificate      /etc/ssl/domain.crt;
</span><span class='line'> + ssl_certificate      /etc/ssl/domain_bundle.crt;
</span><span class='line'> # ...
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>以上問題都調整完之後，再測試一次，終於會得 A+</p>

<p><img src="https://jamestong10.github.io/images/posts/2017052304.jpg" alt="level A plus" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Joins and Includes to Avoid N+1 Query Problem]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/23/using-joins-and-includes-to-avoid-n-plus-1-query-problem/"/>
    <updated>2017-05-23T14:39:53+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/23/using-joins-and-includes-to-avoid-n-plus-1-query-problem</id>
    <content type="html"><![CDATA[<!-- more -->


<p>就使用上來說，要從多筆資料去找 belongs_to 的資料，似乎是不太合邏輯</p>

<p>但熟悉使用 ORM 使用者，因為一切都被包裝太的好，或許就會忘記想到有這樣的問題</p>

<h2>Model Relation</h2>

<p>場景設定，使用者有多個Comments</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:comments</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># app/models/comment.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Comment</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>觸發條件 (has_many)</h2>

<p>取得所有的comments，並找出該 comment 的 user 的 email</p>

<p>之所以為 N+1 Query 就是一筆查所有comments，N 筆查每個comment.user.email</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">comments</span> <span class="o">=</span> <span class="no">Comment</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="n">comments</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">comment</span><span class="o">|</span> <span class="n">comment</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">email</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>使用 Joins</h2>

<p><a href="https://apidock.com/rails/ActiveRecord/QueryMethods/joins">joins</a></p>

<p>joins 使用 INNER JOIN 的方式查詢，結果只有comments</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Comment</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># SELECT users.* FROM comments INNER JOIN users ON users.id = comments.user_id</span>
</span></code></pre></td></tr></table></div></figure>


<h2>使用 Includes</h2>

<p><a href="https://apidock.com/rails/v4.2.7/ActiveRecord/QueryMethods/includes">includes</a></p>

<p>includes 使用 WHERE IN 的方式查詢，同時會一併取得users 的資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Comment</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># SELECT comments.* FROM comments</span>
</span><span class='line'><span class="c1"># SELECT users.* FROM users WHERE users.id IN (1)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>反向思考：如果user 使用 joins / includes 會怎樣呢？</h2>

<blockquote><p>雖然都知道可以使用 user.comments 就可以得到答案，但就想實驗使用後的結果</p></blockquote>

<ul>
<li>joins</li>
</ul>


<p>產生重複的 User 資料，得到得資料還得用 <code>.uniq</code> 刪除</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>includes</li>
</ul>


<p>結果一樣，同時會一併取得 comments 的資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpec]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/23/rspec/"/>
    <updated>2017-05-23T11:32:44+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/23/rspec</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>介紹</h2>

<ul>
<li>用來測試 Ruby / Rails 的測試工具</li>
<li>程式開發過程，可以確保程式的正確性，也可以讓開發人員有效的重構</li>
<li>當成一種程式文件</li>
</ul>


<h2>慣例</h2>

<ol>
<li>一個 <em>.rb 要搭配同名的 </em>_spec.rb</li>
<li><code>#method</code> 表示 instance method, <code>.method</code> 表示class method</li>
<li>在 Rails 寫 RSpec 建議順序 Model > Controller > View</li>
</ol>


<h2>安裝</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rspec-rails&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="err">$</span> <span class="n">rails</span> <span class="n">generate</span> <span class="ss">rspec</span><span class="p">:</span><span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定取消自動產生 rspec</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/application.rb</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">generators</span> <span class="k">do</span> <span class="o">|</span><span class="n">g</span><span class="o">|</span>
</span><span class='line'>    <span class="n">g</span><span class="o">.</span><span class="n">controller_specs</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">g</span><span class="o">.</span><span class="n">model_specs</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">g</span><span class="o">.</span><span class="n">view_specs</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">g</span><span class="o">.</span><span class="n">helper_specs</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">g</span><span class="o">.</span><span class="n">routing_specs</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">g</span><span class="o">.</span><span class="n">request_specs</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>測試指令</h2>

<ul>
<li><code>rspec</code> 全部測試</li>
<li><code>rspec spec/controllers</code> 整個資料夾測試</li>
<li><code>rspec filename_spec.rb</code> 單一檔案測試</li>
<li><code>rspec filename_spec.rb:linenumber</code> 執行某行之後的測試</li>
</ul>


<h2>輸出</h2>

<p>預設不產出文件</p>

<ul>
<li>產生document 並輸出 specdoc  文件</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="err">$</span> <span class="n">rspec</span> <span class="n">spec</span> <span class="o">--</span><span class="nb">format</span> <span class="n">documentation</span> <span class="o">--</span><span class="n">out</span> <span class="n">rspec_result</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'>  <span class="err">$</span> <span class="n">rspec</span> <span class="n">spec</span> <span class="o">-</span><span class="n">fd</span> <span class="o">-</span><span class="n">o</span> <span class="n">rspec_result</span><span class="o">.</span><span class="n">txt</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>輸出 html 文件</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="err">$</span> <span class="n">rspec</span> <span class="n">spec</span> <span class="o">--</span><span class="nb">format</span> <span class="n">html</span> <span class="o">--</span><span class="n">out</span> <span class="n">rspec_result</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>  <span class="err">$</span> <span class="n">rspec</span> <span class="n">spec</span> <span class="o">-</span><span class="n">fh</span> <span class="o">-</span><span class="n">o</span> <span class="n">rspec_result</span><span class="o">.</span><span class="n">html</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Describe / Context / it</h2>

<p>RSpec 的主要區塊，所有的測試都寫在 describe 裡面，裡面則包含多個 context、it 測試</p>

<p>descirbe 超過 40 個字，就需要使用 context、it 分段，讓你的測試更明確、有條理，保持可讀性</p>

<h2>Before &amp; After</h2>

<p>同unit test 的setup 與teardown</p>

<ul>
<li>before(:each) 每段it之前執行</li>
<li>before(:all)  整段describe前只執行一次</li>
<li>after(:each)  每段it之後執行</li>
<li>after(:all)   整段describe後只執行一次</li>
</ul>


<h2>let &amp; let!</h2>

<ul>
<li>let 用到的時候再會被執行</li>
<li>let! 每個測試前都會執行</li>
</ul>


<p>建議用 let 代替 before 來建立 instance variable</p>

<p>因為 let 有 lazy load 特性，只在測項第一次用到該 variable 時被執行，並且會 cache 直到該測項結束</p>

<p>這個技巧在產生 database 內容以測試 query 和 scope 時十分好用</p>

<h2>Stubs</h2>

<p>Stub: For replacing a method with code that returns a specified result.</p>

<ul>
<li>用stub 假造 method，讓它忽略這個 method，或是指定回傳東西，可以避免在測試時，測試不必要的東西。</li>
<li>專注於要測試的東西，如果 method 有呼叫其他 method 就可以 stub 掉</li>
<li>製造假物件，指定這個假物件能回應哪些訊息，還有對應的回傳值，讓要測試的主角，在執行過程中一些地方，能獲得一致的結果</li>
<li>要測試的 model</li>
</ul>


<h2>Mocks</h2>

<p>Mock: A stub with an expectations that the method gets called.</p>

<ul>
<li>假造 method，不只忽略這個 method ，並且期望被呼叫到</li>
<li>「模擬」與一個「協作者」的互動，設立一個「會收到指定訊息」的期望，去驗證互動是否真的有發生。</li>
<li>簡單來說 mock 就是 stub + expectation , 說它是 stub 是因為它也可以像 stub 一樣偽造方法, 阻斷對原來方法的調用, expectation 是說它不僅偽造了這個方法,它還期望你(必須)調用這個方法,如果沒有被調用到,這個 test 就 fail 了</li>
<li>一樣製造假物件，但是現在我們改對這個假物件斷言，在主角的執行過程中，應該要收到什麼訊息、收到的訊息應該夾帶什麼參數、訊息收到的次數…等等，但是會有程式碼的流程些微不自然的問題（準備、斷言、（準備）、執行）</li>
</ul>


<p>使用 mock objects，在 RSpec 裡面叫做 double（替身），來取代「外部邏輯」資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 讓 Post.save 失敗</span>
</span><span class='line'><span class="n">allow_any_instance_of</span><span class="p">(</span><span class="no">Post</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:save</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 讓 Post.update 失敗</span>
</span><span class='line'><span class="n">allow_any_instance_of</span><span class="p">(</span><span class="no">Post</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:update</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Controller Specs</h2>

<p>Examples</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="no">TeamsController</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="ss">:controller</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;GET index&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;assigns @teams&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">team</span> <span class="o">=</span> <span class="no">Team</span><span class="o">.</span><span class="n">create</span>
</span><span class='line'>      <span class="n">get</span> <span class="ss">:index</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">assigns</span><span class="p">(</span><span class="ss">:teams</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="o">[</span><span class="n">team</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;renders the index template&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">get</span> <span class="ss">:index</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">render_template</span><span class="p">(</span><span class="s2">&quot;index&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Matchers</p>

<ul>
<li>render_template</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">render_template</span><span class="p">(</span><span class="ss">:new</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>redirect_to</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">location</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>have_http_status</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span><span class="p">(</span><span class="ss">:created</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># success 就有四種寫法 XD</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span><span class="p">(</span><span class="ss">:ok</span><span class="p">)</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span><span class="p">(</span><span class="ss">:success</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># page not found</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_http_status</span><span class="p">(</span><span class="mi">404</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>be_a_new</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># assigns(:widget) 表示 action 要回傳的 @widget</span>
</span><span class='line'><span class="c1"># be_a_new 只是否等同 Widget.new</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">assigns</span><span class="p">(</span><span class="ss">:widget</span><span class="p">))</span><span class="o">.</span><span class="n">to</span> <span class="n">be_a_new</span><span class="p">(</span><span class="no">Widget</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Model Specs</h2>

<p>Examples</p>

<p>使用 reload 重新載入資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;rails_helper&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="no">Post</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="ss">:model</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">context</span> <span class="s2">&quot;with 2 or more comments&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;orders them in reverse chronologically&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">create!</span>
</span><span class='line'>      <span class="n">comment1</span> <span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">:body</span> <span class="o">=&gt;</span> <span class="s2">&quot;first comment&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">comment2</span> <span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">:body</span> <span class="o">=&gt;</span> <span class="s2">&quot;second comment&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">post</span><span class="o">.</span><span class="n">reload</span><span class="o">.</span><span class="n">comments</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="o">[</span><span class="n">comment2</span><span class="p">,</span> <span class="n">comment1</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>取消 transactions</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;rails_helper&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span>
</span><span class='line'>  <span class="n">c</span><span class="o">.</span><span class="n">use_transactional_examples</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">c</span><span class="o">.</span><span class="n">order</span> <span class="o">=</span> <span class="s2">&quot;defined&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="no">Widget</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="ss">:model</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;has none to begin with&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="no">Widget</span><span class="o">.</span><span class="n">count</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;has one after adding one&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Widget</span><span class="o">.</span><span class="n">create</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="no">Widget</span><span class="o">.</span><span class="n">count</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 關閉 transactions，剛剛建立的 Widget 就不會消失</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;has one after one was created in a previous example&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="no">Widget</span><span class="o">.</span><span class="n">count</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">after</span><span class="p">(</span><span class="ss">:all</span><span class="p">)</span> <span class="p">{</span> <span class="no">Widget</span><span class="o">.</span><span class="n">destroy_all</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Routing Specs</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="s2">&quot;posts&quot;</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="ss">:routing</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="ss">:get</span> <span class="o">=&gt;</span> <span class="s2">&quot;/events&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">route_to</span><span class="p">(</span><span class="s2">&quot;events#index&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="ss">:get</span> <span class="o">=&gt;</span> <span class="s2">&quot;/widgets/1/edit&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">not_to</span> <span class="n">be_routable</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="ss">:get</span> <span class="o">=&gt;</span> <span class="s2">&quot;/posts/1&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">route_to</span><span class="p">(</span>
</span><span class='line'>        <span class="ss">:controller</span> <span class="o">=&gt;</span> <span class="s2">&quot;posts&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:action</span> <span class="o">=&gt;</span> <span class="s2">&quot;show&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>:type => ??</h2>

<p>設定 type 為 controller / model / routing 是 rspec metadata，可以讓 rspec 知道目前的 type</p>

<p>當然也可以在 rails_helper 加入設定，這樣就不需要再每個 spec 檔都加入 type ，只要把檔案放在對應的資料夾，就可以代表該檔案的type</p>

<p>e.g. spec/models -> 認定為 model</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails_helper</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">infer_spec_type_from_file_location!</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="http://www.relishapp.com/rspec/rspec-rails/v/3-5/docs">RSpec Rails 3.5</a></li>
<li><a href="http://betterspecs.org/zh_tw/">Better Specs</a></li>
<li><a href="http://motion-express.com/trainings/rspec-rails-1">特快車-RSpec-Rails</a></li>
<li><a href="http://mgleon08.github.io/blog/2016/01/29/rspec-plus-factory-girl/">用 Rspec + Factory Girl + CircleCi 寫測試</a></li>
<li><a href="https://github.com/festime/stubs-mocks-spies-in-rspec">了解 Stubs, Mocks, and Spies</a></li>
<li><a href="https://xdite.gitbooks.io/rspec-101/content/">RSpec on Rails 101</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Module::Concerning and ActiveSupport::Concern]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/18/concerns/"/>
    <updated>2017-05-18T15:45:21+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/18/concerns</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Module#concerning</h2>

<p>Rails 4.1 新增的功能，如果module 內容不多，但又非得新增一個module，或許可以考慮用concerning 的方式</p>

<p>一般使用mixin 使用方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/article.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Tagging</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># app/models/concerns/tagging.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Tagging</span>
</span><span class='line'> <span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用concerning</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Article</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="c1"># 基本：建立一般的 instance method</span>
</span><span class='line'>  <span class="n">concerning</span> <span class="ss">:Tagging</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">news</span> <span class="k">do</span>
</span><span class='line'>      <span class="c1"># ...</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># 進階1:加入included (include 時執行)</span>
</span><span class='line'>  <span class="n">concerning</span> <span class="ss">:Scope</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">included</span> <span class="n">di</span>
</span><span class='line'>      <span class="n">scope</span> <span class="ss">:published</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">state</span><span class="p">:</span> <span class="s1">&#39;published&#39;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># 進階2：加入class method</span>
</span><span class='line'>  <span class="n">concerning</span> <span class="ss">:Search</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">class_methods</span> <span class="k">do</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">published</span> <span class="k">do</span>
</span><span class='line'>        <span class="c1"># ...</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><a href="http://api.rubyonrails.org/v4.1/classes/Module/Concerning.html">Module#Concerning</a></li>
</ul>


<h2>ActiveSupport::Concern</h2>

<ul>
<li>將共用的邏輯寫到module 並用mixin 的方式，如此可以集中管理</li>
<li>讓module 的相依性降低（低耦合），方便管理</li>
<li>命名以able结尾</li>
</ul>


<p>一般module 要mixin 到class  要使用included</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">M</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span> <span class="no">ClassMethods</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">scope</span> <span class="ss">:disabled</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">disabled</span><span class="p">:</span> <span class="kp">true</span><span class="p">)}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果使用ActiveSupport::Concern module 就可以改寫</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/concern&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">M</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Concern</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 在include 的時執行</span>
</span><span class='line'>  <span class="c1"># 加入 scope 或 attr_accessor</span>
</span><span class='line'>  <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">scope</span> <span class="ss">:disabled</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">disabled</span><span class="p">:</span> <span class="kp">true</span><span class="p">)}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 定義class methods</span>
</span><span class='line'>  <span class="n">class_methods</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 除了上面兩個區塊外，都屬於 instance methods</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><a href="https://ruby-china.org/topics/19812">ActiveSupport::Concern 小结</a></li>
<li><a href="http://api.rubyonrails.org/classes/ActiveSupport/Concern.html">ActiveSupport::Concern</a></li>
<li><a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concern.rb">concern.rb</a></li>
<li><a href="http://signalvnoise.com/posts/3372-put-chubby-models-on-a-diet-with-concerns">put-chubby-models-on-a-diet-with-concerns</a></li>
<li><a href="http://mgleon08.github.io/blog/2016/03/26/concern/">concern</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Object Oriented Design Principles - SOLID]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/15/object-orientend-design-priciples/"/>
    <updated>2017-05-15T11:50:00+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/15/object-orientend-design-priciples</id>
    <content type="html"><![CDATA[<!-- more -->


<p>在學習程式開發的過程，應先了解物件導向設計的五個基本原則</p>

<p>這些原則比較偏向觀念，應用上，開發前規劃或是重構的過程調整</p>

<h2>SRP - Single Responsibility Principle SRP</h2>

<blockquote><p>讓類別只有一種職責，一個類別只能有一個變更的理由</p></blockquote>

<h3>秘訣</h3>

<ul>
<li>使用專業領域分工切分職責</li>
<li>不要貪圖方便，將所有職責放在同一個類別</li>
<li>類別也不要切太細，會造成效能影響</li>
</ul>


<h2>OCP - Open-Close Principle</h2>

<blockquote><p>物件和 Entity 的擴展是開放的，但修改是封閉的</p></blockquote>

<h3>秘訣</h3>

<ul>
<li>設計抽象介面與外部互動</li>
<li>把變化委託給其他類別處理</li>
<li>只要異動 metadata or config</li>
<li>小心過度繼承</li>
</ul>


<h2>LSP - Liskov Substitution Principle</h2>

<blockquote><p>所有參照基礎類別（父類別）的地方，必須可以透明地使用衍生類別（子類別）的物件替代，而不需要任何改變</p>

<p>有繼承關係才需要考慮 LSP</p></blockquote>

<h3>秘訣</h3>

<ul>
<li>方法回傳值、丟出異常要一致</li>
</ul>


<h2>LKP - Least Knowledge Principle （a.k.a LOD - Law Of Demeter)</h2>

<blockquote><p>一個物件應該對其他物件有最少的瞭解</p>

<p>一個物件不要有太多public method</p></blockquote>

<h3>秘訣</h3>

<ul>
<li>已經成形的操作流程就封裝起來</li>
<li>不必要公開的方法就設為 private 或 protected</li>
<li>外面知道的越少，耦合度就越低</li>
</ul>


<h2>ISP - Interface Segregation Principle</h2>

<blockquote><p>用戶端不應該依賴它使用不到的介面</p></blockquote>

<h3>秘訣</h3>

<ul>
<li>把interface 當成可以做什麼</li>
<li>減少讓每個interface 可以做的事情</li>
<li>如果發現有空的實作時，就表示interface 可以再細化</li>
</ul>


<h2>DIP - Dependency Inversion Principle</h2>

<blockquote><p>高層模組不應該相依於低層模組，兩者都應該相依於抽象</p>

<p>抽象不應該相依於具體，具體應該相依於抽象</p></blockquote>

<h3>秘訣</h3>

<ul>
<li>互動的部份交給抽象類別或介面</li>
<li>會改變的實作，就放到子類別裡面</li>
</ul>


<h2>References</h2>

<ul>
<li><a href="http://slides.com/jaceju/design-patterns-by-examples/#/">從實例學設計模式</a></li>
<li><a href="http://rockssdlog.blogspot.tw/2012/03/oo-solid.html">白話- OO設計原則 (SOLID原則) - 附生活實例</a></li>
<li><a href="http://teddy-chen-tw.blogspot.tw/2014/04/solid.html">Teddy-SOLID</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Forwardable (Delegator)]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/10/ruby-forwardable/"/>
    <updated>2017-05-10T14:02:58+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/10/ruby-forwardable</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>ruby method 是一行程式碼且執行動作跟 method_name 相同，就可以使用 forwardable 簡化</p></blockquote>

<h2>語法</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Define method as delegator instance method with an optional alias name ali.
</span><span class='line'># Method calls to ali will be delegated to accessor.method.
</span><span class='line'>def_instance_delegator(accessor, method, ali = method)
</span><span class='line'>
</span><span class='line'># Shortcut for defining multiple delegator methods,
</span><span class='line'># but with no provision for using a different name.
</span><span class='line'>def_instance_delegators(accessor, *methods)
</span><span class='line'>
</span><span class='line'># 定義單一個 method, alias for: def_instance_delegator
</span><span class='line'>def_delegator(accessor, method, ali = method)
</span><span class='line'>
</span><span class='line'># 定義多個 methods, alias for: def_instance_delegators
</span><span class='line'>def_delegators(accessor, *methods)</span></code></pre></td></tr></table></div></figure>


<h2>範例</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 一般 class Queue
</span><span class='line'>class Queue
</span><span class='line'>  def initialize
</span><span class='line'>    @q = []
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  def push(val)
</span><span class='line'>    @q.push(val)
</span><span class='line'>  end
</span><span class='line'>  def shift
</span><span class='line'>    @q.shift
</span><span class='line'>  end
</span><span class='line'>  def size
</span><span class='line'>    @q.size
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'># 使用forwardable 可以把method 優化
</span><span class='line'>require 'forwardable'
</span><span class='line'>
</span><span class='line'>class Queue
</span><span class='line'>  extend Forwardable
</span><span class='line'>  def initialize
</span><span class='line'>    @q = []
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  def_delegator :@q, :push
</span><span class='line'>  def_delegator :@q, :shift
</span><span class='line'>  def_delegator :@q, :size
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'># 更可以一次宣告多個
</span><span class='line'>class Queue
</span><span class='line'>  extend Forwardable
</span><span class='line'>  def initialize
</span><span class='line'>    @q = []
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  def_delegators :@q, :push, :shift, :size
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="http://ruby-doc.org/stdlib-2.0.0/libdoc/forwardable/rdoc/Forwardable.html">ruby-doc Forwardable</a></li>
<li><a href="https://www.saturnflyer.com/blog/ruby-forwardable-deep-dive">ruby-forwardable-deep-dive</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cookies and Sessions]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/09/cookies-and-sessions/"/>
    <updated>2017-05-09T16:21:35+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/09/cookies-and-sessions</id>
    <content type="html"><![CDATA[<!-- more -->


<h1><a href="https://developer.mozilla.org/zh-TW/docs/Web/HTTP/Cookies">Cookies</a> (Session cookies)</h1>

<p>因爲 HTTP 協定是無狀態((Stateless)，所以server 端無法得知使用者在前端的操作，因此設計 cookie 來解決這個問題。</p>

<h2>目的：</h2>

<ul>
<li>管理session：例如：使用者是否登入，購物車明細</li>
<li>Personalization：使用者個人設定</li>
<li>Tracking：分析使用者習慣</li>
</ul>


<h2>特性：</h2>

<ul>
<li>儲存在 client 端瀏覽器</li>
<li>http header 裡面其中一個欄位</li>
<li>key / value 的形式儲存</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># http header sample
</span><span class='line'>
</span><span class='line'>HTTP/1.0 200 OK
</span><span class='line'>Content-type: text/html
</span><span class='line'>Set-Cookie: yummy_cookie=choco
</span><span class='line'>Set-Cookie: tasty_cookie=strawberry
</span><span class='line'>
</span><span class='line'>[page content]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>檔案大小最多 4Kb</li>
<li>以明文的方式在網際網路上傳輸及在 Client 端電腦儲存，不建議儲存敏感資料</li>
<li>Expired 設定生命週期</li>
<li>Domain 設定可存取此cookies 的domain，屬性Path 會辨識 URL 必須存在request resource</li>
</ul>


<h2>Tips</h2>

<ul>
<li>使用javascript 移除cookie</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function delete_cookie( name ) {
</span><span class='line'>  document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
</span><span class='line'>}
</span><span class='line'>delete_cookie('yummy_cookie');</span></code></pre></td></tr></table></div></figure>


<h1><a href="https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/sessions">Sessions</a></h1>

<ul>
<li>儲存在 server 端</li>
<li>session 需要搭配 cookie 才能產生運作</li>
<li>server 會傳送帶有 session id 的 cookie 給 client，當下一個 request 及cookie 再被送至 server 端時，會用 cookie 中的 session id 來辨認每個使用者所儲存的狀態與 data。</li>
<li>相對於 cookies，session 多用來儲存敏感的資料，也常常成為攻擊的目標 <a href="http://guides.rubyonrails.org/security.html#session-hijacking">Session Hijacking</a></li>
</ul>


<h1>Web Stroage</h1>

<ul>
<li>HTML5 的 Web Storage 是一種可讓網頁將資料儲存於本地端的技術，其作用如同 cookie</li>
<li>儲存於 Web Storage 中的資料，是以 key-value pair 的形式保存（同 cookie）。</li>
<li>Cookie 儲存空間很小，最多僅能儲存 4 KB 的資料。</li>
<li>HTML5 Web Storage 的儲存空間則大得多，且依各家瀏覽器的實作而不同。一般應該至少有 5 MB 的空間。</li>
<li>儲存於 cookie 中的資料會在用戶端瀏覽器與伺服器之間旅行（每次瀏覽器送出 request 至伺服器時就會夾帶 cookies），Web Storage 則不會（純粹運作於用戶端）。這表示 Web Storage 不會占用網路頻寬。</li>
<li>Web Storage 分為兩種：<strong>local storage</strong> 和 <strong>session storage</strong></li>
</ul>


<h1><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage">Local Storage</a></h1>

<ul>
<li>window properties</li>
<li>資料永久保存</li>
<li>分頁、瀏覽器都使用同一個 localStorage，依據同源政策，只有同個網址才能使用同一個 localStorage</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># set
</span><span class='line'>window.localStorage.setItem('myCat', 'Tom');
</span><span class='line'>
</span><span class='line'># remove
</span><span class='line'>window.localStorage.removeItem(key);</span></code></pre></td></tr></table></div></figure>


<h1><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage">Session Storage</a></h1>

<ul>
<li>window properties</li>
<li>分頁或瀏覽器關閉 sesstionStorage 就會被清除</li>
<li>不同分頁有不同的 sesstionStorage</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Save data to sessionStorage
</span><span class='line'>sessionStorage.setItem('key', 'value');
</span><span class='line'>
</span><span class='line'># Get saved data from sessionStorage
</span><span class='line'>var data = sessionStorage.getItem('key');
</span><span class='line'>
</span><span class='line'># Remove saved data from sessionStorage
</span><span class='line'>sessionStorage.removeItem('key');
</span><span class='line'>
</span><span class='line'># Remove all saved data from sessionStorage
</span><span class='line'>sessionStorage.clear();</span></code></pre></td></tr></table></div></figure>


<h1>Local Storage vs. Session Storage</h1>

<ul>
<li>sessionStorage 在瀏覽器關閉時就會消失</li>
<li>localStorage 沒有失效時間，但也要注意避免儲存太多資料到 localStorage</li>
</ul>


<h1>Cookies and Sessions in Rails</h1>

<h2>Sessions</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># create/update sessions
</span><span class='line'>session[:token] = "GDYPN+N/MIK1FO4M+1D1/A=="
</span><span class='line'>
</span><span class='line'># delete session
</span><span class='line'>session[:token] = nil
</span><span class='line'>
</span><span class='line'># reset session
</span><span class='line'>reset_session</span></code></pre></td></tr></table></div></figure>


<h2>Cookies</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># create/update cookies
</span><span class='line'>cookies[:hits] = @post.hits
</span><span class='line'>
</span><span class='line'># create and expired cookies
</span><span class='line'>cookies[:hits] = {
</span><span class='line'>    value: @post.hits,
</span><span class='line'>    expiress: 4.hours.form_now,
</span><span class='line'>    domain: "www.domain-name.com"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># delete
</span><span class='line'>cookies.delete(:hits)
</span><span class='line'>
</span><span class='line'># encryption cookies
</span><span class='line'>cookies.signed[:token] = "GDYPN+N/MIK1FO4M+1D1/A=="
</span><span class='line'>
</span><span class='line'># permanent cookies
</span><span class='line'>cookies.permanent[:hits] = @post.hits</span></code></pre></td></tr></table></div></figure>


<h2>local storage</h2>

<p>local storage has nothing to do with rails. So just write javascript to call it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script&gt;
</span><span class='line'>localStorage.setItem("company_id", "&lt;%= @company.id %&gt;");
</span><span class='line'>&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<h1>References</h1>

<ul>
<li><a href="http://rails.ruby.tw/action_controller_overview.html#session">RailsGuides session</a></li>
<li><a href="http://rails.ruby.tw/action_controller_overview.html#cookies">RailsGuides cookies</a></li>
<li><a href="http://jerryzou.com/posts/cookie-and-web-storage/">cookie-and-web-storage</a></li>
<li><a href="http://springok-blog.logdown.com/posts/2015/11/25/web101-knowledge-session-and-cookie">web101-knowledge-session-and-cookie</a></li>
<li><a href="http://mgleon08.github.io/blog/2016/06/12/cookie-and-session/">cookie-and-session</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RWD Conecpt]]></title>
    <link href="https://jamestong10.github.io/blog/2017/05/04/rwd-conecpt/"/>
    <updated>2017-05-04T17:12:09+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/05/04/rwd-conecpt</id>
    <content type="html"><![CDATA[<!-- more -->


<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Content-is-like-water-1980.jpg/800px-Content-is-like-water-1980.jpg" alt="content is like water" /></p>

<blockquote><p>「內容就像水」，這是一個說明RWD原則的說法</p></blockquote>

<h2>RWD</h2>

<p>Responsive web design 響應式網頁設計，縮寫為RWD。一種網頁設計的技術做法，可使網頁在不同裝置上瀏覽，可自動對應不同的顯示內容。</p>

<h2>Viewport</h2>

<h3>目的</h3>

<p>告訴瀏覽器目前的裝置（長、寬），做為CSS 套用基準</p>

<h3>用法</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>width: 使用 device-width (裝置寬度) 作為可視區域的寬度。</li>
<li>initial-scale: 文檔初始的比例，用 1 表示 100% ，範圍從 0.1 ~ 10 可任填。</li>
<li>minimum-scale: 最小可以縮放到 0.8 比例。</li>
<li>maximum-scale: 最大可以縮放到 2.0 比例。</li>
<li>user-scalable: 是否允許使用者進行縮放。no 不允許；yes 允許。</li>
</ul>


<h2>Css3 Media Query</h2>

<p>使用media query 決定要套用哪些css</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># media screen 檢查 screen
</span><span class='line'># max-width: 540px 最大寬度為 540px
</span><span class='line'># 符合以上條件就會套用 css
</span><span class='line'>
</span><span class='line'>@media screen and (max-width: 540px) {
</span><span class='line'>  font-size: 14px;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>可以參考下圖，設計不同裝置，顯示對應的樣式</p>

<p><img src="https://jamestong10.github.io/images/posts/2017050401.jpg" alt="each devise of rwd device" /></p>

<h2>References</h2>

<ul>
<li><a href="https://en.wikipedia.org/wiki/Responsive_web_design">RWD WIKI</a></li>
<li><a href="https://lintongtong.gitbooks.io/rwd/content/">RWD 概念分享</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning CSS and Tips]]></title>
    <link href="https://jamestong10.github.io/blog/2017/04/13/learning-css/"/>
    <updated>2017-04-13T13:31:59+08:00</updated>
    <id>https://jamestong10.github.io/blog/2017/04/13/learning-css</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Selector</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#  HTML id    attribute
</span><span class='line'>.  HTML class attribute
</span></code></pre></td></tr></table></div></figure>


<h3>套用順序性</h3>

<ul>
<li>權限：id 的優先權大於class，class 的優先權又大於其他元素</li>
<li>套用順序：由上到下，相同class name，套用最後後面執行的效果 （當然也要考慮權重問題）</li>
</ul>


<h3>Selector 規則</h3>

<p><a href="http://codepen.io/jamestong10/pen/LRorBr">codepen</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 同時有這兩個class 才會套用
</span><span class='line'>.classA.classB
</span><span class='line'>
</span><span class='line'># 父子關係 父親classA 第一層子元素classB 才會套用此css
</span><span class='line'>.classA &gt; .classB
</span><span class='line'>
</span><span class='line'># 父孫關係 父親classA 所有子元素classB 皆會套用此css
</span><span class='line'>.classA .classB
</span><span class='line'>
</span><span class='line'># 只要有 classA, classB 皆會套用
</span><span class='line'>.classA, .classB</span></code></pre></td></tr></table></div></figure>


<h2>Css Values</h2>

<p>css 預設許多值，可以透過MDN Css (<a href="https://developer.mozilla.org/en-US/docs/Web/CSS">https://developer.mozilla.org/en-US/docs/Web/CSS</a>)查看每個css  有哪些預設值可以使用，以下使用 font-size (<a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/font-size">https://developer.mozilla.org/zh-TW/docs/Web/CSS/font-size</a>) 示範</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/* Global values */
</span><span class='line'>font-size: inherit;
</span><span class='line'>font-size: initial;
</span><span class='line'>font-size: unset;
</span><span class='line'>
</span><span class='line'>/* &lt;absolute-size&gt; values */
</span><span class='line'>font-size: xx-small;
</span><span class='line'>font-size: x-small;
</span><span class='line'>font-size: small;
</span><span class='line'>font-size: medium;
</span><span class='line'>font-size: large;
</span><span class='line'>font-size: x-large;
</span><span class='line'>font-size: xx-large;
</span><span class='line'>
</span><span class='line'>/* &lt;relative-size&gt; values */
</span><span class='line'>font-size: larger;
</span><span class='line'>font-size: smaller;
</span><span class='line'>
</span><span class='line'>/* &lt;length&gt; values */
</span><span class='line'>font-size: 12px;
</span><span class='line'>font-size: 0.8em;
</span><span class='line'>
</span><span class='line'>/* &lt;percentage&gt; values */
</span><span class='line'>font-size: 80%;</span></code></pre></td></tr></table></div></figure>


<h2>Position</h2>

<p><a href="http://codepen.io/jamestong10/pen/PbzvWN">codepen</a></p>

<ul>
<li>static: default</li>
<li>relative: 相對位置</li>
<li>absolute: 絕對位置</li>
<li>fixed:    固定位置</li>
</ul>


<h2>Box-sizing</h2>

<p>使用<code>box-sizing:border-box</code> 之後，width, height 就會包含 padding 和border 的寬度</p>

<p><img src="https://jamestong10.github.io/images/posts/2017041301.jpg" width="500" alt="border-box" /></p>

<h2>Box-shadow</h2>

<p>呈現陰影或光暈的效果</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>box-shadow: x y blur spread color inset;
</span><span class='line'># 前面 4 個都是尺寸值 (length，不接受 %)
</span><span class='line'># 水平位移距離 (x)
</span><span class='line'># 垂直位移距離 (y)
</span><span class='line'># 模糊強度 (blur)
</span><span class='line'># 擴散強度 (spread)
</span><span class='line'># 內陰影   (inset)</span></code></pre></td></tr></table></div></figure>


<h2>Overflow</h2>

<p>定義元素超過某個範圍的時候該如何呈現</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>overflow: auto;　  //預設會自動使用捲軸
</span><span class='line'>overflow: visible; //顯示的文字或圖片會直接超出範圍，不使用捲軸。
</span><span class='line'>overflow: hidden;　//自動隱藏超出的文字或圖片。
</span><span class='line'>overflow: scroll;　//自動產生捲軸。
</span><span class='line'>overflow: inherit; //繼承自父元素的可見性</span></code></pre></td></tr></table></div></figure>


<h2>Flexbox</h2>

<p>Flexbox 中文意思就是可伸縮靈活的盒子，所以它用途就是讓容器內的子項目能夠靈活改變寬、高、大小、排序&hellip;等</p>

<p>要讓元素垂直置中非常好用</p>

<ul>
<li><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">A Complete Guide to Flexbox</a></li>
<li><a href="https://flexbox.io/">What the Flexbox</a></li>
<li><a href="http://sweeteason.pixnet.net/blog/post/42781628">CSS Flexbox Layout 學習心得筆記</a></li>
</ul>


<h2>Pseudo Elements</h2>

<p><a href="http://codepen.io/jamestong10/pen/VPPJYm">codepen</a></p>

<p>常用的elements</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>::before
</span><span class='line'>::after
</span><span class='line'>::selection
</span><span class='line'>::first-line
</span><span class='line'>::first-letter</span></code></pre></td></tr></table></div></figure>


<h2>Pseudo Classes</h2>

<p><a href="http://codepen.io/jamestong10/pen/LxOZPd">codepen</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:active      # 常用在此連結與此頁面被點選時套用
</span><span class='line'>:checked
</span><span class='line'>:first-child # 取css selector 第一個 element
</span><span class='line'>:last-child  # 取css selector 最後一個 element
</span><span class='line'>:not()
</span><span class='line'>:nth-child()</span></code></pre></td></tr></table></div></figure>


<h2>Tips</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 置底 (父element 需要是position: relative)
</span><span class='line'>position: absolute;
</span><span class='line'>bottom: 0;
</span><span class='line'>
</span><span class='line'># 外面顯示inline 裡面顯示block
</span><span class='line'># 根據內容大小縮放
</span><span class='line'>display: inline-block;
</span><span class='line'>
</span><span class='line'># 浮動;如果是block 則是在左邊
</span><span class='line'>float: left;
</span><span class='line'># 情境：一個div 內有兩個div 一個要顯示在左邊、另一個顯示在右邊
</span><span class='line'># http://codepen.io/jamestong10/pen/dpLqRL
</span><span class='line'>
</span><span class='line'># 文字特效。情境：不想要文字有下底線
</span><span class='line'>text-decoration: none;
</span><span class='line'>
</span><span class='line'># 改變滑鼠游標形狀。情境：自己寫div link 可以套用
</span><span class='line'>cursor: pointer;
</span><span class='line'>
</span><span class='line'># 設定最大高度、最大寬度
</span><span class='line'>max-width: 800px
</span><span class='line'>max-height: 800px
</span><span class='line'>
</span><span class='line'># 消除文字或元素之間的空白區塊
</span><span class='line'># 方法1：在最大的div 使用，而內部需要把這屬性復原
</span><span class='line'>.outer-block
</span><span class='line'>  white-space: nowrap
</span><span class='line'>.inner-block
</span><span class='line'>  white-space: normal
</span><span class='line'>
</span><span class='line'># 方法2：在最大的div 使用，而內部需要把這屬性復原
</span><span class='line'>.outer-block
</span><span class='line'>  font-size: 0
</span><span class='line'>.inner-block
</span><span class='line'>  font-size: initial
</span><span class='line'>
</span><span class='line'># 使用「*」取的所有元素或子元素
</span><span class='line'>*
</span><span class='line'>  font-family: sans-serif
</span><span class='line'>
</span><span class='line'>.block
</span><span class='line'>  *
</span><span class='line'>    display: inline-block
</span><span class='line'>
</span><span class='line'># 水平正常，但垂直走鐘
</span><span class='line'>vertical-align: top
</span><span class='line'>
</span><span class='line'># 產生有透明度的顏色
</span><span class='line'>rgba(0,0,0,0.5)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Vagrant 操作Virtaul Boxes]]></title>
    <link href="https://jamestong10.github.io/blog/2016/09/11/use-vagrant-to-operating-virtual-box/"/>
    <updated>2016-09-11T00:45:21+08:00</updated>
    <id>https://jamestong10.github.io/blog/2016/09/11/use-vagrant-to-operating-virtual-box</id>
    <content type="html"><![CDATA[<!-- more -->


<p><img src="https://jamestong10.github.io/images/posts/2016091201.jpg" alt="vagrant_virtulaBox" /></p>

<h2>Why Vagrant + Virtual Box</h2>

<p>學習Rails 的過程，會使用Mac 的Parallels Desktop 建立Ubuntu 當作Production，使用幾次之後覺得有點麻煩，如果要再擴大系統架構，就玩不下去了，於是google 搜尋找到了Vagrant + Virtual Box 的組合，覺得這是不錯的組合，寫篇文章紀錄一下</p>

<h2>Installtion</h2>

<p>安裝Vagrant, Virtual 這兩套軟體</p>

<ul>
<li><a href="https://www.vagrantup.com/downloads.html">Vagrant</a></li>
<li><a href="https://www.virtualbox.org/wiki/Downloads">Virtual Box</a></li>
</ul>


<h2>概念</h2>

<p>Box 可以從Vagrant網站下載，Box 是Virtual Box 專用的，表示一個Virtual Machine (VM)，而官方提供的Box 又稱為Base，也就是最基本的VM</p>

<h2>新增 Box</h2>

<p>可以到<a href="https://atlas.hashicorp.com/boxes/search">官網</a> 查詢要用什麼box_name (vm)</p>

<p>這次介紹使用 <code>ubuntu/trusty64</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant box add [box_name]
</span><span class='line'># e.g.
</span><span class='line'>$ vagrant box add ubuntu/trusty64</span></code></pre></td></tr></table></div></figure>


<h2>初始化</h2>

<p>這邊有點抽象不太好理解，可能多操作幾次，就可以理解接下來說明的內容</p>

<p>每初始一個VM 都會建立一個對應的Vagrantfile，而這VM 已與原本的Base 衍生出來(或解讀為Base 的Instance)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir vagrant-test && cd vagrant-test
</span><span class='line'>$ vagrant init [box_name]
</span><span class='line'># e.g.
</span><span class='line'>$ vagrant init ubuntu/trusty64</span></code></pre></td></tr></table></div></figure>


<h2>Configuration of Vagrantfile</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>VAGRANTFILE_API_VERSION = "2"
</span><span class='line'>Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
</span><span class='line'>  # 預設是true
</span><span class='line'>  # 不檢查更新版本
</span><span class='line'>  # config.vm.box_check_update = false
</span><span class='line'>
</span><span class='line'>  # 設定使用的 Box
</span><span class='line'>  config.vm.box = "ubuntu/trusty64"
</span><span class='line'>
</span><span class='line'>  # 設定虛擬主機的所使用的記憶體，可以避免在虛擬主機 bundle install 時，記憶體不足的錯誤
</span><span class='line'>  config.vm.provider :virtualbox do |vb|
</span><span class='line'>    vb.customize ["modifyvm", :id, "--memory", "1024"]
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  # 設定虛擬主機僅供自己使用的 ip (注意設跟自己的虛擬ip 同一個網域)
</span><span class='line'>  config.vm.network :private_network, ip: "10.10.10.10"
</span><span class='line'>
</span><span class='line'>  # 設定主機名稱
</span><span class='line'>  config.vm.hostname = "ubuntu-rails"
</span><span class='line'>
</span><span class='line'>  # Forward the Rails server default port to the host
</span><span class='line'>  config.vm.network "forwarded_port", guest: 80, host: 8080
</span><span class='line'>
</span><span class='line'>  # Forward the Redis default port to the host
</span><span class='line'>  # config.vm.network "forwarded_port", guest: 6379, host: 6379
</span><span class='line'>
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>操作指令</h2>

<p>開機</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant up</span></code></pre></td></tr></table></div></figure>


<p>使用ssh 連線到VM</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant ssh</span></code></pre></td></tr></table></div></figure>


<p>重開 (修改 vagrantfile 後需要重開)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant reload</span></code></pre></td></tr></table></div></figure>


<p>暫停 <-> 恢復</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant suspend
</span><span class='line'>$ vagrant resume</span></code></pre></td></tr></table></div></figure>


<p>關機</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant halt</span></code></pre></td></tr></table></div></figure>


<h3>Others</h3>

<p>VM 狀態</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant status</span></code></pre></td></tr></table></div></figure>


<p>列出box 清單</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant box list</span></code></pre></td></tr></table></div></figure>


<p>查看所有指令清單</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant list-commands</span></code></pre></td></tr></table></div></figure>


<h2><a href="https://www.vagrantup.com/docs/provisioning/">Provisioners</a></h2>

<p>Vagrant 允許使用Provisioner 自動安裝或調整設定內容，就是在啟動VM 之後，執行已設定的腳本或軟體</p>

<p>Vagrant 提供三種自動化 provisioning 機制：</p>

<ul>
<li>inline script（內嵌腳本）</li>
<li>external script file（外部腳本檔）</li>
<li>configuration management software（組態管理軟體）</li>
</ul>


<p>在Vagrantfile 中設定要使用哪種provision</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># inline script
</span><span class='line'>config.vm.provision "shell", inline: "nginx -v"
</span><span class='line'>
</span><span class='line'># external script file
</span><span class='line'>config.vm.provision "shell", path: "check_env.sh"
</span><span class='line'>
</span><span class='line'># configuration management software
</span><span class='line'>config.vm.provision "chef_solo" do |chef|
</span><span class='line'>    # ...
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>


<h2>打包自己專用的BOX</h2>

<p>如果每個VM 都要因應不同需求安裝對應的軟體，實在非常費時費工</p>

<p>可以透過<code>package</code> 把已經設定好的VM 打包變成Box，如果日後有需求，可以根據此Box 初始一個新的VM</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 指令會在你目前的資料夾下建立一個myFirstVM.box
</span><span class='line'>$ vagrant package --output myFirstVM.box
</span><span class='line'>
</span><span class='line'># 將box 加入清單
</span><span class='line'>$ vagrant box add [box_name] myFirstVM.box
</span><span class='line'># e.g.
</span><span class='line'>$ vagrant box add ubuntu-nginx-rails-redis myFirstVM.box
</span><span class='line'>
</span><span class='line'># 初始化
</span><span class='line'>$ vagrant init ubuntu-nginx-rails-redis</span></code></pre></td></tr></table></div></figure>


<h2>多機環境</h2>

<p>只有一個VM 是還不夠的，Vagrant 是很強大的，可以在Vagrantfile 設定多主機的環境</p>

<p>以下示範建立 app * 1 + db * 1</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>VAGRANTFILE_API_VERSION = "2"
</span><span class='line'>Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
</span><span class='line'>
</span><span class='line'>  # as rails-app
</span><span class='line'>  config.vm.define :app do |app_config|
</span><span class='line'>    app_config.vm.provider :virtualbox do |vb|
</span><span class='line'>      vb.customize ["modifyvm", :id, "--memory", "512"]
</span><span class='line'>    end
</span><span class='line'>
</span><span class='line'>    app_config.vm.box = "ubuntu/trusty64"
</span><span class='line'>    app_config.vm.host_name = "app"
</span><span class='line'>    app_config.vm.network :private_network, ip: "10.10.10.10"
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  # as mysql database
</span><span class='line'>  config.vm.define :db do |db_config|
</span><span class='line'>    db_config.vm.provider :virtualbox do |vb|
</span><span class='line'>        vb.customize ["modifyvm", :id, "--memory", "512"]
</span><span class='line'>      end
</span><span class='line'>    db_config.vm.box = "ubuntu/trusty64"
</span><span class='line'>    db_config.vm.host_name = "db"
</span><span class='line'>    db_config.vm.network :private_network, ip: "10.10.10.11"
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>後記</h2>

<ul>
<li>指令不熟悉可以透過 <code>vagrant -h</code> 找到答案</li>
<li>vagrant 是非常強大的工具，也可以串接AWS 或 Docker，有空再來寫篇文章吧</li>
</ul>


<h2>References</h2>

<ul>
<li><a href="https://www.vagrantup.com/">Vagrant</a></li>
<li><a href="https://drupaltaiwan.org/forum/20141125/11378">Vagrant 安裝與建構</a></li>
<li><a href="http://gogojimmy.net/2013/05/26/vagrant-tutorial/">Vagrant Tutorial-1</a></li>
<li><a href="http://www.codedata.com.tw/social-coding/vagrant-tutorial-2-playing-vm-with-vagrant/">Vagrant Tutorial-2</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 使用CarrierWave 上傳圖片 + 上傳AWS S3]]></title>
    <link href="https://jamestong10.github.io/blog/2016/09/02/carrierwave-guide-and-integration-aws-s3/"/>
    <updated>2016-09-02T14:09:46+08:00</updated>
    <id>https://jamestong10.github.io/blog/2016/09/02/carrierwave-guide-and-integration-aws-s3</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>功能介紹</h2>

<h3>修圖軟體</h3>

<ul>
<li><a href="http://imagemagick.org/script/index.php">ImageMagick</a></li>
<li><a href="http://www.graphicsmagick.org/">GraphicsMagick</a></li>
</ul>


<h3>Gems</h3>

<ul>
<li><a href="https://github.com/minimagick/minimagick">MiniMagick</a> 透過Ruby 使用ImageMagick、GraphicsMagick 的gem</li>
<li><a href="https://github.com/rmagick/rmagick">RMagick</a> 透過Ruby 使用ImageMagick</li>
<li><a href="https://github.com/carrierwaveuploader/carrierwave">CarrierWave</a> 上傳檔案的gem</li>
</ul>


<h2>ImageMagick</h2>

<p>需要安裝，否則後面的圖片操作都會失敗</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew isntall imagemagick</span></code></pre></td></tr></table></div></figure>


<p>檢查是否安裝成功</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ convert -version
</span><span class='line'>Version: ImageMagick 6.8.9-7 Q16 x86_64 2014-09-11 http://www.imagemagick.org
</span><span class='line'>Copyright: Copyright (C) 1999-2014 ImageMagick Studio LLC
</span><span class='line'>Features: DPC Modules
</span><span class='line'>Delegates: bzlib fftw freetype jng jpeg lcms ltdl lzma png tiff xml zlib</span></code></pre></td></tr></table></div></figure>


<h2>Install Gems</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Gemfile
</span><span class='line'># 二擇一
</span><span class='line'>gem 'mini_magick'
</span><span class='line'># gem 'rmagick'
</span><span class='line'>
</span><span class='line'>gem 'carrierwave'
</span><span class='line'>
</span><span class='line'>$ bundle install</span></code></pre></td></tr></table></div></figure>


<h2>Uploader</h2>

<p>建立uploader，命名爲image （自行決定, e.g.,file, photo &hellip; etc.）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails g uploader image</span></code></pre></td></tr></table></div></figure>


<p>設定Uploader</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># app/uploaders/image_uploader.rb
</span><span class='line'>
</span><span class='line'>class ImageUploader &lt; CarrierWave::Uploader::Base
</span><span class='line'>
</span><span class='line'>  include CarrierWave::MiniMagick # 指定使用minimagick
</span><span class='line'>
</span><span class='line'>  storage :file
</span><span class='line'>
</span><span class='line'>  def store_dir
</span><span class='line'>    "uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}"
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  # 指定圖片size (同時產生其他size :thumb, :medium)
</span><span class='line'>  process :resize_to_fit =&gt; [800, 600]
</span><span class='line'>
</span><span class='line'>  version :thumb do
</span><span class='line'>    process :resize_to_fill =&gt; [200,120]
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  version :medium do
</span><span class='line'>    process :resize_to_fill =&gt; [400,300]
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>Model</h2>

<p>建立Model，命名為photo （自行決定, e.g.,file, photo, dog, cat !!?? etc.）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails g model photo image:string
</span><span class='line'>$ rake db:migrate</span></code></pre></td></tr></table></div></figure>


<p>設定 model 的uploader</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># app/models/photo.rb
</span><span class='line'>class Photo &lt; ActiveRecord::Base
</span><span class='line'>  mount_uploader :image, ImageUploader
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>gitignore</h2>

<p>排除測試上傳的圖片</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># .gitignore
</span><span class='line'>public/uploads</span></code></pre></td></tr></table></div></figure>


<h1>上傳AWS S3</h1>

<h2>Install Gems</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Gemfile
</span><span class='line'>gem 'fog', group: :production</span></code></pre></td></tr></table></div></figure>


<h2>Uploader 設定Production 圖片透過fog 連接並儲存至AWS S3</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if Rails.env.production?
</span><span class='line'>  storage :fog
</span><span class='line'>else
</span><span class='line'>  storage :file
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>CarrierWave 加入fog credentials 的設定</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># config/initializers/carrier_wave.rb
</span><span class='line'>CarrierWave.configure do |config|
</span><span class='line'>  if Rails.env.production?
</span><span class='line'>    config.storage = :fog
</span><span class='line'>    config.fog_credentials = {
</span><span class='line'>      provider:              'AWS',
</span><span class='line'>      aws_access_key_id:     ENV['AWS_ACCESS_KEY_ID'],
</span><span class='line'>      aws_secret_access_key: ENV['AWS_SECRET_ACCESS_KEY'],
</span><span class='line'>      region:                ENV['AWS_REGION']
</span><span class='line'>    }
</span><span class='line'>    config.fog_directory  =  ENV['AWS_S3_BUCKET_PRODUCTION']
</span><span class='line'>  else
</span><span class='line'>    config.storage :file
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>AWS Variables</h2>

<p>列出不同VPS 如何管理AWS 的變數</p>

<ul>
<li>Heroku : Settings > Cofig Variables</li>
<li>AWS: figrao</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails I18n]]></title>
    <link href="https://jamestong10.github.io/blog/2016/09/01/rails-i18n-timezone/"/>
    <updated>2016-09-01T11:35:19+08:00</updated>
    <id>https://jamestong10.github.io/blog/2016/09/01/rails-i18n-timezone</id>
    <content type="html"><![CDATA[<blockquote><p>國際化的設計，根據不同使用者採用不同的語言、數字格式、日期格式，簡稱i18n</p></blockquote>

<!-- more -->


<h2>i18n 多語系</h2>

<p>Rails 預設是使用英文(en)，如要使用i18n 多語系，則需安裝 <code>rails-i18n</code> gem</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails-i18n&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定載入路徑、預設語系</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/application.rb</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 設定載入路徑</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">i18n</span><span class="o">.</span><span class="n">load_path</span> <span class="o">+=</span> <span class="no">Dir</span><span class="o">[</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;config&#39;</span><span class="p">,</span> <span class="s1">&#39;locales&#39;</span><span class="p">,</span> <span class="s1">&#39;**&#39;</span><span class="p">,</span> <span class="s1">&#39;*.{rb,yml}&#39;</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'><span class="c1"># or</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">i18n</span><span class="o">.</span><span class="n">load_path</span> <span class="o">+=</span> <span class="no">Dir</span><span class="o">[</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;config&#39;</span><span class="p">,</span> <span class="s1">&#39;locales&#39;</span><span class="p">,</span> <span class="s1">&#39;*.{rb,yml}&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 設定預設語系 zh or en</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">i18n</span><span class="o">.</span><span class="n">default_locale</span> <span class="o">=</span> <span class="ss">:&quot;zh-TW&quot;</span>
</span><span class='line'><span class="c1"># or</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">i18n</span><span class="o">.</span><span class="n">default_locale</span> <span class="o">=</span> <span class="ss">:en</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># use default locale when translation missing</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">i18n</span><span class="o">.</span><span class="n">fallbacks</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="c1"># or</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">i18n</span><span class="o">.</span><span class="n">fallbacks</span> <span class="o">=</span> <span class="ss">:&quot;zh-TW&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>public i18n api</h2>

<p>translate：Lookup text translations</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">I18</span><span class="o">.</span><span class="n">t</span><span class="p">(</span><span class="s1">&#39;store.title&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># or</span>
</span><span class='line'><span class="n">t</span><span class="p">(</span><span class="s1">&#39;store.title&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>localize：Localize Date and Time objects to local formats</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">I18</span><span class="o">.</span><span class="n">l</span><span class="p">(</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
</span><span class='line'><span class="c1">#or</span>
</span><span class='line'><span class="n">l</span><span class="p">(</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>自訂語彙</h2>

<ul>
<li>詞彙檔放在 config/locales</li>
<li>使用 YAML 格式</li>
<li>命名方式：***.語系.yml。例如：zh-TW.yml、devise.zh-TW.yml</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/locales/zh-TW.yml</span>
</span><span class='line'><span class="n">zh</span><span class="o">-</span><span class="ss">TW</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">hello</span><span class="p">:</span> <span class="s2">&quot;親愛的%{name}你好!&quot;</span>
</span><span class='line'>    <span class="ss">admin</span><span class="p">:</span>
</span><span class='line'>        <span class="ss">user</span><span class="p">:</span> <span class="err">使用者管理</span>
</span><span class='line'>        <span class="ss">event</span><span class="p">:</span> <span class="err">活動管理</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注意 YAML 格式的縮排必須使用兩個空格，Tab是不允許的。直接複製貼上可能會有問題，請小心檢查縮排</p></blockquote>

<p>YAML 格式</p>

<ul>
<li>第一層：語系</li>
<li>第二層：自訂名稱、或是 rails 保留字，如：controller、activerecord&hellip;</li>
</ul>


<h2>I18n.t</h2>

<p>使用 <code>I18n.t</code> 根據設定的語系，替換對應的詞彙</p>

<p>在 View 可使用 t 這 Helper 方法，第二參數傳入 Scope</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span><span class="p">(</span><span class="s2">&quot;admin.event&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">t</span><span class="p">(</span><span class="ss">:event</span><span class="p">,</span> <span class="ss">scope</span><span class="p">:</span> <span class="ss">:admin</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果不在View中，則需要加上 I18n 類別</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">I18n</span><span class="o">.</span><span class="n">t</span><span class="p">(</span><span class="s2">&quot;admin.event&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>template 傳入參數，第二參數傳入變數</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span><span class="p">(</span><span class="ss">:hello</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="n">current_user</span><span class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="c1"># 親愛的James你好!</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用 YAML 特性加入陣列</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/locales/zh-TW.yml</span>
</span><span class='line'><span class="n">zh</span><span class="o">-</span><span class="ss">TW</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">date</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">day_names</span><span class="p">:</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">星期日</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">星期一</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">星期二</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">星期三</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">星期四</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">星期五</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">星期六</span>
</span></code></pre></td></tr></table></div></figure>


<p>透過 i18n 取得陣列資料</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">I18n</span><span class="o">.</span><span class="n">t</span><span class="p">(</span><span class="s1">&#39;date.day_names&#39;</span><span class="p">,</span> <span class="ss">locale</span><span class="p">:</span> <span class="s1">&#39;zh-TW&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>變化：使用 i18n.t 設定網頁條款</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">zh</span><span class="o">-</span><span class="ss">TW</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">example</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">policy_html</span><span class="p">:</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">使用條款</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">      # ...</span>
</span><span class='line'><span class="sr">    privacy_html:</span>
</span><span class='line'><span class="sr">      &lt;h1&gt;隱私條款&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="c1"># ...</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 view 呼叫 i18n.t</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= t(&#39;example.policy_html&#39;) %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;example.privacy_html&#39;</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Lazy Lookup (Convension)</h2>

<p>設定語彙檔</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/locales/zh-TW.yml</span>
</span><span class='line'><span class="n">zh</span><span class="o">-</span><span class="ss">TW</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">books</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">index</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">title</span><span class="p">:</span> <span class="err">標題</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果在 app/views/books/index.html.erb 使用 I18n book.index.title 可以縮寫如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">t</span> <span class="s1">&#39;.title&#39;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>搭配 Model 使用</h2>

<p>根據 model name 建立對應的語彙檔</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">zh</span><span class="o">-</span><span class="ss">TW</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">activerecord</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">models</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">brand</span><span class="p">:</span> <span class="err">品牌</span>
</span><span class='line'>      <span class="ss">category</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">category</span> <span class="err">分類</span>
</span><span class='line'>    <span class="ss">attributes</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">brand</span><span class="p">:</span>
</span><span class='line'>        <span class="ss">created_at</span><span class="p">:</span> <span class="o">*</span><span class="n">created_at</span>
</span><span class='line'>        <span class="nb">name</span><span class="p">:</span> <span class="err">名稱</span>
</span><span class='line'>    <span class="ss">errors</span><span class="p">:</span>
</span><span class='line'>      <span class="ss">messages</span><span class="p">:</span>
</span><span class='line'>        <span class="ss">record_invalid</span><span class="p">:</span> <span class="s2">&quot;校驗失敗: %{errors}&quot;</span>
</span><span class='line'>        <span class="ss">restrict_dependent_destroy</span><span class="p">:</span>
</span><span class='line'>          <span class="ss">has_one</span><span class="p">:</span> <span class="err">由於</span> <span class="sx">%{record}</span> <span class="err">需要此記錄，所以無法移除記錄</span>
</span><span class='line'>          <span class="ss">has_many</span><span class="p">:</span> <span class="err">由於</span> <span class="sx">%{record}</span> <span class="err">需要此記錄，所以無法移除記錄</span>
</span></code></pre></td></tr></table></div></figure>


<p>第二層為 activerecord</p>

<p>第三層 models 設定 model 語彙名稱</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Brand</span><span class="o">.</span><span class="n">model_name</span><span class="o">.</span><span class="n">human</span> <span class="c1"># zh-TW =&gt; 品牌</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定 attributes</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Brand</span><span class="o">.</span><span class="n">human_attribute_name</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span> <span class="c1"># zh-TW =&gt; 名稱</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定 errors</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">activerecord</span><span class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">messages</span><span class="o">.</span><span class="n">record_invalid</span><span class="p">(</span><span class="ss">errors</span><span class="p">:</span> <span class="s1">&#39;尚未輸入資料&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>如何讓使用者切換語系</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># controllers/application_controller.rb</span>
</span><span class='line'><span class="n">before_action</span> <span class="ss">:set_locale</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">set_locale</span>
</span><span class='line'>  <span class="c1"># 可以將 [&quot;en&quot;, &quot;zh-TW&quot;] 設定為 VALID_LANG 放到 config/environment.rb 中</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:locale</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="no">I18n</span><span class="o">.</span><span class="n">available_locales</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span> <span class="n">params</span><span class="o">[</span><span class="ss">:locale</span><span class="o">].</span><span class="n">to_sym</span> <span class="p">)</span>
</span><span class='line'>    <span class="n">session</span><span class="o">[</span><span class="ss">:locale</span><span class="o">]</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:locale</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">I18n</span><span class="o">.</span><span class="n">locale</span> <span class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:locale</span><span class="o">]</span> <span class="o">||</span> <span class="no">I18n</span><span class="o">.</span><span class="n">default_locale</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># views/..</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= link_to &quot;中文版&quot;, :controller =</span><span class="o">&gt;</span> <span class="n">controller_name</span><span class="p">,</span>
</span><span class='line'><span class="ss">:action</span> <span class="o">=&gt;</span> <span class="n">action_name</span><span class="p">,</span> <span class="ss">:locale</span> <span class="o">=&gt;</span> <span class="s2">&quot;zh-TW&quot;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%= link_to &quot;English&quot;, :controller =&gt;</span> <span class="n">controller_name</span><span class="p">,</span>
</span><span class='line'><span class="ss">:action</span> <span class="o">=&gt;</span> <span class="n">action_name</span><span class="p">,</span> <span class="ss">:locale</span> <span class="o">=&gt;</span> <span class="s2">&quot;en&quot;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="http://guides.rubyonrails.org/i18n.html">Rails Internationalization (I18n) API</a></li>
<li><a href="https://ihower.tw/rails/i18n.html">ihower - 多國語系及時區</a></li>
<li><a href="https://hackmd.io/p/HJarJWGd#/">Rails I18n 實作技巧</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActiveRecord Module - Calculations]]></title>
    <link href="https://jamestong10.github.io/blog/2016/08/25/activerecord-module-calculations/"/>
    <updated>2016-08-25T10:44:12+08:00</updated>
    <id>https://jamestong10.github.io/blog/2016/08/25/activerecord-module-calculations</id>
    <content type="html"><![CDATA[<blockquote><p>擷取常用的methods</p></blockquote>

<!-- more -->


<h2>Pluck</h2>

<p>使用<a href="http://apidock.com/rails/ActiveRecord/Calculations/pluck">pluck</a> 查詢想要的欄位資料，值已陣列回傳，值的類別同欄位型別(如果可以)</p>

<p>也可以傳入sql 指令，例如：Distinct</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Person.all.map(&:name)
</span><span class='line'>
</span><span class='line'># equal to
</span><span class='line'>
</span><span class='line'>Person.pluck(:name)
</span><span class='line'># SELECT people.name FROM people
</span><span class='line'># =&gt; ["A", "B", "C"]
</span><span class='line'>
</span><span class='line'>Person.pluck(:id, :name)
</span><span class='line'># SELECT people.id, people.name FROM people
</span><span class='line'># =&gt; [[1, 'David'], [2, 'Jeremy'], [3, 'Jose']]
</span><span class='line'>
</span><span class='line'>Person.pluck('DISTINCT role')
</span><span class='line'># SELECT DISTINCT role FROM people
</span><span class='line'># =&gt; ['admin', 'member', 'guest']
</span><span class='line'>
</span><span class='line'>Person.where(age: 21).limit(5).pluck(:id)
</span><span class='line'># SELECT people.id FROM people WHERE people.age = 21 LIMIT 5
</span><span class='line'># =&gt; [2, 3]
</span><span class='line'>
</span><span class='line'>Person.pluck('DATEDIFF(updated_at, created_at)')
</span><span class='line'># SELECT DATEDIFF(updated_at, created_at) FROM people
</span><span class='line'># =&gt; ['0', '27761', '173']</span></code></pre></td></tr></table></div></figure>


<blockquote><p>與select 的差別在於，select 會取出model object，而pluck 只取出module value</p></blockquote>

<p>使用Benchmark 測試一下兩者的執行時間</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>puts Benchmark.measure { User.select(:id).to_a }
</span><span class='line'># User Load (0.6ms)  SELECT "users"."id" FROM "users"
</span><span class='line'># 0.010000   0.000000   0.010000 (  0.014949)
</span><span class='line'>
</span><span class='line'>puts Benchmark.measure { User.pluck(:id) }
</span><span class='line'># (0.8ms)  SELECT "users"."id" FROM "users"
</span><span class='line'># 0.000000   0.000000   0.000000 (  0.004965)</span></code></pre></td></tr></table></div></figure>


<p>相較之下，pluck 的執行速度會比select 快</p>

<p>是因為select 還要把結果轉model object，但是pluck 單純把結果轉array</p>

<p>結論：如果只要單純取欄位的資料，請選擇<code>pluck</code></p>

<h2>Count</h2>

<p><a href="http://apidock.com/rails/v4.2.1/ActiveRecord/Calculations/count">Count</a> the records</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Person.count
</span><span class='line'># =&gt; the total count of all people
</span><span class='line'>
</span><span class='line'>Person.count(:age)
</span><span class='line'># =&gt; returns the total count of all people whose age is present in database
</span><span class='line'>
</span><span class='line'>Person.count(:all)
</span><span class='line'># =&gt; performs a COUNT(*) (:all is an alias for '*')
</span><span class='line'>
</span><span class='line'>Person.distinct.count(:age)
</span><span class='line'># =&gt; counts the number of different age values</span></code></pre></td></tr></table></div></figure>


<p>使用group 會回傳Hash 值，並以key = column value, value = count amount 的方式表示</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Person.group(:city).count
</span><span class='line'># =&gt; { 'Rome' =&gt; 5, 'Paris' =&gt; 3 }</span></code></pre></td></tr></table></div></figure>


<p>如果group 多個欄位，那key 就是欄位的組合</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Article.group(:status, :category).count
</span><span class='line'># =&gt;  {["draft", "business"]=&gt;10, ["draft", "technology"]=&gt;4,
</span><span class='line'>       ["published", "business"]=&gt;0, ["published", "technology"]=&gt;2}</span></code></pre></td></tr></table></div></figure>


<p>使用select 則是回傳select 後的筆數</p>

<blockquote><p>並非所有正確的select 都會產生正確的count。會根據database 而有所不同。</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Person.select(:age).count
</span><span class='line'># =&gt; counts the number of different age values</span></code></pre></td></tr></table></div></figure>


<h2>Maximum/Minimum</h2>

<p><a href="http://apidock.com/rails/v4.2.1/ActiveRecord/Calculations/maximum">Maximum</a> 找出查詢欄位的最大值，查詢結果會根據欄位型別產生對應的物件類別，無資料則回傳<code>nil</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Person.maximum(:age) # =&gt; 93</span></code></pre></td></tr></table></div></figure>


<p>同上，但是<a href="http://apidock.com/rails/v4.2.1/ActiveRecord/Calculations/minimum">Minimum</a>查詢最小值</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Person.minimum(:age) # =&gt; 7</span></code></pre></td></tr></table></div></figure>


<h2>Sum/Average</h2>

<p><a href="http://apidock.com/rails/ActiveRecord/Calculations/sum">Sum</a> 計算查詢欄位的總和，無資料則回傳0</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Person.sum(:age) # =&gt; 4562</span></code></pre></td></tr></table></div></figure>


<p><a href="http://apidock.com/rails/ActiveRecord/Calculations/average">Average</a> 計算欄位的平均值，無資料則回傳<code>nil</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Person.average(:age) # =&gt; 35.8</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="http://apidock.com/rails/ActiveRecord/Calculations/">ActiveRecord-Calculations</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby - Nil? | Empty? | Blank?]]></title>
    <link href="https://jamestong10.github.io/blog/2016/08/24/ruby-nil_empty_blank/"/>
    <updated>2016-08-24T14:09:59+08:00</updated>
    <id>https://jamestong10.github.io/blog/2016/08/24/ruby-nil_empty_blank</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>nil?</h2>

<p>可使用在任何的<code>object</code>，檢查是否為<code>nil</code>，如果是<code>nil</code>會回傳<code>true</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a = "str"
</span><span class='line'>b = nil
</span><span class='line'>
</span><span class='line'>a.nil? # false
</span><span class='line'>b.nil? # true</span></code></pre></td></tr></table></div></figure>


<h2>empty?</h2>

<p>可使用在<code>String</code>、<code>Array</code>、<code>Hash</code>，如果為長度為0 會回傳<code>true</code></p>

<p>如果object 是<code>nil</code>，使用empty? 會出現<code>NoMethodError</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a = ""
</span><span class='line'>b = []
</span><span class='line'>c = {}
</span><span class='line'>
</span><span class='line'>a.empty? # true
</span><span class='line'>b.empty? # true
</span><span class='line'>c.empty? # true</span></code></pre></td></tr></table></div></figure>


<h2>blank?</h2>

<p>這實作在Rails ，是empty? 的強化版，不受限在<code>String</code>、<code>Array</code>、<code>Hash</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nil.blank?    # true
</span><span class='line'>false.blank?  # true
</span><span class='line'>[].blank?     # true
</span><span class='line'>{}.blank?     # true
</span><span class='line'>"".blank?     # true
</span><span class='line'>5.blank?      # false
</span><span class='line'>0.blank?      # false</span></code></pre></td></tr></table></div></figure>


<p><strong>But</strong> 如果空白字串，會認定為<code>true</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"  ".blank? # false
</span><span class='line'>"  ".empty? # true</span></code></pre></td></tr></table></div></figure>


<p>注意：如果陣列的值都是空字串或是nil，會回傳true</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>['',nil].blank? # ture</span></code></pre></td></tr></table></div></figure>


<p>可以使用.all? + blank? 的方式來檢查陣列的值</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>['',nil].all? &:blank # true</span></code></pre></td></tr></table></div></figure>


<h2>present?</h2>

<p>這也是實作在Rails 但跟<code>blank?</code> 的判斷完全顛倒</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nil.present?    # false
</span><span class='line'>false.present?  # false
</span><span class='line'>[].present?     # false
</span><span class='line'>{}.present?     # false
</span><span class='line'>"".present?     # false
</span><span class='line'>5.present?      # true
</span><span class='line'>0.present?      # true</span></code></pre></td></tr></table></div></figure>


<h2>總結</h2>

<p>剛剛測試的結果，已經有整理成一份表格，可以透過表格查看要使用什麼方式來檢查boolean 值~</p>

<p><img src="https://jamestong10.github.io/images/posts/2016082401.jpg" alt="nil_empty_blank_present" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActiveRecord Module - Enum]]></title>
    <link href="https://jamestong10.github.io/blog/2016/08/22/activerecord-module-enum/"/>
    <updated>2016-08-22T17:17:21+08:00</updated>
    <id>https://jamestong10.github.io/blog/2016/08/22/activerecord-module-enum</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>ActiveRecord::Enum</h2>

<h3>目的</h3>

<p>宣告文字用來說明欄位中數字的意義，以下介紹兩種方式，也可順便解釋使用enum 的好處</p>

<p>假設Conversation 有個status 的欄位，建立常數，使用Hash 表示 0、1，分別代表active、archived</p>

<h3>w/o Enum</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module Conversation
</span><span class='line'>  STATUS = { 0 =&gt; "active", 1 =&gt; "archived" }
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>conversation = Conversation.last
</span><span class='line'>STATUS[conversation.status] # active or archived</span></code></pre></td></tr></table></div></figure>


<h3>w/ Enum</h3>

<blockquote><p>官方建議：欄位必須建立預設值</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Conversation &lt; ActiveRecord::Base
</span><span class='line'>  enum status: {
</span><span class='line'>    active: 0,
</span><span class='line'>    archived: 1
</span><span class='line'>  }
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>查看總共有哪些狀態(名字加複數)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Conversation.statuses
</span><span class='line'># { "active"=&gt;0, "archived"=&gt;1 }</span></code></pre></td></tr></table></div></figure>


<p>查看目前狀態</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>conversation = Conversation.last
</span><span class='line'>conversatino.active!
</span><span class='line'>conversation.status # active</span></code></pre></td></tr></table></div></figure>


<p>變更欄位狀態</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>conversation = Conversation.last
</span><span class='line'>conversatino.archived!
</span><span class='line'>conversatino.archived?  #true</span></code></pre></td></tr></table></div></figure>


<p>查詢是否為此狀態</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>conversation = Conversation.last
</span><span class='line'>conversatino.active!
</span><span class='line'>conversatino.active?    #true
</span><span class='line'>conversatino.archived?  #false</span></code></pre></td></tr></table></div></figure>


<p>當作where 查詢條件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Conversation.where(status: [:active, :archived])</span></code></pre></td></tr></table></div></figure>


<p>加入_prefix</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Conversation &lt; ActiveRecord::Base
</span><span class='line'>  enum comments_status: [:active, :inactive], _prefix: :comments
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>conversation.comments_inactive!
</span><span class='line'>conversation.comments_active? # =&gt; false</span></code></pre></td></tr></table></div></figure>


<p>加入_suffix</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Conversation &lt; ActiveRecord::Base
</span><span class='line'>  enum status: [:active, :archived], _suffix: true
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>conversation.active_status!
</span><span class='line'>conversation.archived_status? # =&gt; false</span></code></pre></td></tr></table></div></figure>


<p>轉成陣列 (options_for_select)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Conversation.statuses.invert.to_a # [[0, "active"], [1, "archived"]]</span></code></pre></td></tr></table></div></figure>


<h3>優點</h3>

<ul>
<li>database 仍儲存數字代碼，查詢速度較快</li>
<li>程式部分仍可以使用文字方式開發，提高閱讀性</li>
</ul>


<h3>References</h3>

<ul>
<li><a href="http://edgeapi.rubyonrails.org/classes/ActiveRecord/Enum.html">ActiveRecord::Enum</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
